{
    "id": "/CorentinJ/Real-Time-Voice-Cloning",
    "issues": "205",
    "watch": "944",
    "fork": "9.1k",
    "star": "55.7k",
    "topics": [
        "python",
        "deep-learning",
        "tensorflow",
        "pytorch",
        "tts",
        "voice-cloning"
    ],
    "license": "Other",
    "languages": [
        "Python,100.0%"
    ],
    "contributors": [
        "https://avatars.githubusercontent.com/u/12038136?s=64&v=4",
        "https://avatars.githubusercontent.com/u/636814?s=64&v=4",
        "https://avatars.githubusercontent.com/u/24435787?s=64&v=4",
        "https://avatars.githubusercontent.com/u/17?s=64&v=4",
        "https://avatars.githubusercontent.com/u/1884186?s=64&v=4",
        "https://avatars.githubusercontent.com/u/3709715?s=64&v=4",
        "https://avatars.githubusercontent.com/u/4528852?s=64&v=4",
        "https://avatars.githubusercontent.com/u/7344016?s=64&v=4",
        "https://avatars.githubusercontent.com/u/12185615?s=64&v=4",
        "https://avatars.githubusercontent.com/u/19250070?s=64&v=4",
        "https://avatars.githubusercontent.com/u/23404599?s=64&v=4",
        "https://avatars.githubusercontent.com/u/32972797?s=64&v=4",
        "https://avatars.githubusercontent.com/u/46911396?s=64&v=4",
        "https://avatars.githubusercontent.com/u/56316487?s=64&v=4",
        "https://avatars.githubusercontent.com/u/91517923?s=64&v=4"
    ],
    "about": "Clone a voice in 5 seconds to generate arbitrary speech in real-time",
    "is_AI": "y",
    "category": "Digital Tools/Frameworks",
    "summary": "Sure! Here's the English translation of your content in Markdown format:\n\n---\n\n# 1. Core Project Content and Problems Solved\n\nThis project is a **Real-Time Voice Cloning System**, implemented based on the paper *\"Transfer Learning from Speaker Verification to Multispeaker Text-To-Speech Synthesis\"* (SV2TTS).\n\n### Core Content:\n- Clone a person's voice using just a **5-second voice sample**.\n- Utilizes a deep learning framework, divided into three stages:\n  1. **Encoder**: Extracts voice characteristics from a few seconds of audio and generates a digital representation of the voice.\n  2. **Synthesizer**: Generates mel-spectrograms based on input text and the voice features from the encoder.\n  3. **Vocoder**: Converts mel-spectrograms into audible speech waveforms to produce the final voice output.\n- Uses **WaveRNN** as the vocoder, supporting **real-time speech generation**.\n\n### Problems Solved:\n- Achieves **fast voice cloning**, generating speech from any text with only a small amount of voice data.\n- Supports **multi-speaker Text-to-Speech (TTS)**, enabling flexible adaptation to different voices.\n- Provides **real-time speech synthesis capabilities**, suitable for interactive applications like voice assistants and virtual streamers.\n\n---\n\n# 2. Project Breakthroughs and Innovations\n\n### Technical Innovations:\n- **Generalized Voice Encoder (GE2E)**: An encoder trained on speaker verification tasks, capable of extracting highly discriminative voice features for voice cloning.\n- **Modular Architecture**: The system is divided into three independent but cooperative modules, making it easy to extend and apply transfer learning.\n- **Real-Time Performance**: Combined with the WaveRNN vocoder, it enables real-time speech generation, significantly enhancing user experience.\n\n### Application Breakthroughs:\n- Simplifies voice cloning, which previously required large amounts of voice data and long training times, to **just a few seconds of audio input**.\n- Open-source implementation allows individual developers to quickly deploy and test voice cloning technology.\n\n---\n\n# 3. Entrepreneurial Ideas Based on This Project\n\nHere are some startup ideas based on this project:\n\n### üéôÔ∏è Personalized Voice Generation Platform\n- Provide an online platform where users upload a 5-second voice sample to generate speech for any text.\n- Suitable for voice-over, audiobooks, voice assistants, virtual streamers, etc.\n\n### üí¨ Voice Cloning + AI Customer Service\n- Customize unique customer service voices for businesses to enhance brand recognition.\n- Supports switching between different tones, genders, and age voices depending on the target audience.\n\n### üìö Personalized Reading in Education\n- Educational platforms can clone each teacher's voice for course explanations, homework feedback, etc.\n- Offers \"teacher's original voice\" for reading texts, increasing student engagement.\n\n### üé≠ Voice Customization for Entertainment and Gaming\n- Game character voice customization: Players upload their own voice to make in-game characters speak in their voice.\n- Video creation tools: Short video creators can clone their own or others' voices for voice-over narration.\n\n### üß† Personalized Smart Voice Assistants\n- Smartphones or smart speakers can use the user's own voice for voice interaction.\n- Enhances user privacy and personalization experience.\n\n---\n\nFor higher voice quality, consider exploring more recent SOTA (State of the Art) technologies such as Chatterbox or related research papers. However, this project, as an early implementation, still holds great educational and prototyping value.",
    "text": "Real-Time Voice Cloning\nThis repository is an implementation of\nTransfer Learning from Speaker Verification to\nMultispeaker Text-To-Speech Synthesis\n(SV2TTS) with a vocoder that works in real-time. This was my\nmaster's thesis\n.\nSV2TTS is a deep learning framework in three stages. In the first stage, one creates a digital representation of a voice from a few seconds of audio. In the second and third stages, this representation is used as reference to generate speech given arbitrary text.\nVideo demonstration\n(click the picture):\nPapers implemented\nURL\nDesignation\nTitle\nImplementation source\n1806.04558\nSV2TTS\nTransfer Learning from Speaker Verification to Multispeaker Text-To-Speech Synthesis\nThis repo\n1802.08435\nWaveRNN (vocoder)\nEfficient Neural Audio Synthesis\nfatchord/WaveRNN\n1703.10135\nTacotron (synthesizer)\nTacotron: Towards End-to-End Speech Synthesis\nfatchord/WaveRNN\n1710.10467\nGE2E (encoder)\nGeneralized End-To-End Loss for Speaker Verification\nThis repo\nHeads up\nLike everything else in Deep Learning, this repo has quickly gotten old. Many SaaS apps (often paying) will give you a better audio quality than this repository will. If you wish for an open-source solution with a high voice quality:\nCheck out\npaperswithcode\nfor other repositories and recent research in the field of speech synthesis.\nCheck out\nChatterbox\nfor a similar project up to date with the 2025 SOTA in voice cloning\nSetup\n1. Install Requirements\nBoth Windows and Linux are supported. A GPU is recommended for training and for inference speed, but is not mandatory.\nPython 3.7 is recommended. Python 3.5 or greater should work, but you'll probably have to tweak the dependencies' versions. I recommend setting up a virtual environment using\nvenv\n, but this is optional.\nInstall\nffmpeg\n. This is necessary for reading audio files.\nInstall\nPyTorch\n. Pick the latest stable version, your operating system, your package manager (pip by default) and finally pick any of the proposed CUDA versions if you have a GPU, otherwise pick CPU. Run the given command.\nInstall the remaining requirements with\npip install -r requirements.txt\n2. (Optional) Download Pretrained Models\nPretrained models are now downloaded automatically. If this doesn't work for you, you can manually download them\nhere\n.\n3. (Optional) Test Configuration\nBefore you download any dataset, you can begin by testing your configuration with:\npython demo_cli.py\nIf all tests pass, you're good to go.\n4. (Optional) Download Datasets\nFor playing with the toolbox alone, I only recommend downloading\nLibriSpeech/train-clean-100\n. Extract the contents as\n<datasets_root>/LibriSpeech/train-clean-100\nwhere\n<datasets_root>\nis a directory of your choosing. Other datasets are supported in the toolbox, see\nhere\n. You're free not to download any dataset, but then you will need your own data as audio files or you will have to record it with the toolbox.\n5. Launch the Toolbox\nYou can then try the toolbox:\npython demo_toolbox.py -d <datasets_root>\nor\npython demo_toolbox.py\ndepending on whether you downloaded any datasets. If you are running an X-server or if you have the error\nAborted (core dumped)\n, see\nthis issue\n.",
    "readme": "# Real-Time Voice Cloning\nThis repository is an implementation of [Transfer Learning from Speaker Verification to\nMultispeaker Text-To-Speech Synthesis](https://arxiv.org/pdf/1806.04558.pdf) (SV2TTS) with a vocoder that works in real-time. This was my [master's thesis](https://matheo.uliege.be/handle/2268.2/6801).\n\nSV2TTS is a deep learning framework in three stages. In the first stage, one creates a digital representation of a voice from a few seconds of audio. In the second and third stages, this representation is used as reference to generate speech given arbitrary text.\n\n**Video demonstration** (click the picture):\n\n[![Toolbox demo](https://i.imgur.com/8lFUlgz.png)](https://www.youtube.com/watch?v=-O_hYhToKoA)\n\n\n\n### Papers implemented  \n| URL | Designation | Title | Implementation source |\n| --- | ----------- | ----- | --------------------- |\n|[**1806.04558**](https://arxiv.org/pdf/1806.04558.pdf) | **SV2TTS** | **Transfer Learning from Speaker Verification to Multispeaker Text-To-Speech Synthesis** | This repo |\n|[1802.08435](https://arxiv.org/pdf/1802.08435.pdf) | WaveRNN (vocoder) | Efficient Neural Audio Synthesis | [fatchord/WaveRNN](https://github.com/fatchord/WaveRNN) |\n|[1703.10135](https://arxiv.org/pdf/1703.10135.pdf) | Tacotron (synthesizer) | Tacotron: Towards End-to-End Speech Synthesis | [fatchord/WaveRNN](https://github.com/fatchord/WaveRNN)\n|[1710.10467](https://arxiv.org/pdf/1710.10467.pdf) | GE2E (encoder)| Generalized End-To-End Loss for Speaker Verification | This repo |\n\n## Heads up\nLike everything else in Deep Learning, this repo has quickly gotten old. Many SaaS apps (often paying) will give you a better audio quality than this repository will. If you wish for an open-source solution with a high voice quality:\n- Check out [paperswithcode](https://paperswithcode.com/task/speech-synthesis/) for other repositories and recent research in the field of speech synthesis.\n- Check out [Chatterbox](https://github.com/resemble-ai/chatterbox) for a similar project up to date with the 2025 SOTA in voice cloning\n\n## Setup\n\n### 1. Install Requirements\n1. Both Windows and Linux are supported. A GPU is recommended for training and for inference speed, but is not mandatory.\n2. Python 3.7 is recommended. Python 3.5 or greater should work, but you'll probably have to tweak the dependencies' versions. I recommend setting up a virtual environment using `venv`, but this is optional.\n3. Install [ffmpeg](https://ffmpeg.org/download.html#get-packages). This is necessary for reading audio files.\n4. Install [PyTorch](https://pytorch.org/get-started/locally/). Pick the latest stable version, your operating system, your package manager (pip by default) and finally pick any of the proposed CUDA versions if you have a GPU, otherwise pick CPU. Run the given command.\n5. Install the remaining requirements with `pip install -r requirements.txt`\n\n### 2. (Optional) Download Pretrained Models\nPretrained models are now downloaded automatically. If this doesn't work for you, you can manually download them [here](https://github.com/CorentinJ/Real-Time-Voice-Cloning/wiki/Pretrained-models).\n\n### 3. (Optional) Test Configuration\nBefore you download any dataset, you can begin by testing your configuration with:\n\n`python demo_cli.py`\n\nIf all tests pass, you're good to go.\n\n### 4. (Optional) Download Datasets\nFor playing with the toolbox alone, I only recommend downloading [`LibriSpeech/train-clean-100`](https://www.openslr.org/resources/12/train-clean-100.tar.gz). Extract the contents as `<datasets_root>/LibriSpeech/train-clean-100` where `<datasets_root>` is a directory of your choosing. Other datasets are supported in the toolbox, see [here](https://github.com/CorentinJ/Real-Time-Voice-Cloning/wiki/Training#datasets). You're free not to download any dataset, but then you will need your own data as audio files or you will have to record it with the toolbox.\n\n### 5. Launch the Toolbox\nYou can then try the toolbox:\n\n`python demo_toolbox.py -d <datasets_root>`  \nor  \n`python demo_toolbox.py`  \n\ndepending on whether you downloaded any datasets. If you are running an X-server or if you have the error `Aborted (core dumped)`, see [this issue](https://github.com/CorentinJ/Real-Time-Voice-Cloning/issues/11#issuecomment-504733590).\n",
    "author": "CorentinJ",
    "project": "Real-Time-Voice-Cloning",
    "date": "2025-09-16"
}