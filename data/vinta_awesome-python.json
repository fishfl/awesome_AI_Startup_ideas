{
    "id": "/vinta/awesome-python",
    "issues": "0",
    "watch": "6.1k",
    "fork": "25.8k",
    "star": "246k",
    "topics": [
        "python",
        "awesome",
        "python-library",
        "collections",
        "python-framework",
        "python-resources"
    ],
    "license": "Other",
    "languages": [
        "Python,92.6%",
        "Makefile,7.4%"
    ],
    "contributors": [
        "https://avatars.githubusercontent.com/u/652070?s=64&v=4",
        "https://avatars.githubusercontent.com/u/33116358?s=64&v=4",
        "https://avatars.githubusercontent.com/u/4560482?s=64&v=4",
        "https://avatars.githubusercontent.com/u/178641?s=64&v=4",
        "https://avatars.githubusercontent.com/u/47149194?s=64&v=4",
        "https://avatars.githubusercontent.com/u/44782?s=64&v=4",
        "https://avatars.githubusercontent.com/u/591113?s=64&v=4",
        "https://avatars.githubusercontent.com/u/350912?s=64&v=4",
        "https://avatars.githubusercontent.com/u/823054?s=64&v=4",
        "https://avatars.githubusercontent.com/u/5762822?s=64&v=4",
        "https://avatars.githubusercontent.com/u/555648?s=64&v=4",
        "https://avatars.githubusercontent.com/u/1068245?s=64&v=4",
        "https://avatars.githubusercontent.com/u/1219418?s=64&v=4",
        "https://avatars.githubusercontent.com/u/1634247?s=64&v=4"
    ],
    "about": "An opinionated list of awesome Python frameworks, libraries, software and resources.",
    "is_AI": "y",
    "category": "Teaching Tutorials/Interview Questions",
    "summary": "# Project Summary: Awesome Python\n\n## 1. Core Content and Main Problems Solved\n**Core Content**:  \nAwesome Python is a curated list of Python frameworks, libraries, software, and resources designed to provide developers with a comprehensive and high-quality reference for tools. It covers multiple fields, ranging from data science and machine learning to web development and game development.\n\n**Main Problems Solved**:  \n- **Information Overload**: Among the vast number of Python libraries, developers often struggle to quickly find tools that suit their needs. Awesome Python provides a carefully filtered collection of quality libraries.\n- **Learning Curve**: For beginners, understanding which libraries are suitable for specific tasks can be challenging. This list helps users get started faster by organizing libraries into categories.\n- **Technology Selection**: It offers authoritative guidance for technology selection to developers and technical teams, reducing the time spent on research and evaluation.\n\n---\n\n## 2. Breakthroughs or Innovations\n- **Wide Coverage**: Awesome Python not only includes common development tools but also covers cutting-edge fields such as deep learning, computer vision, and natural language processing, showcasing Python's broad range of applications.\n- **Community-Driven**: Maintained by the open-source community, this project is continuously updated to reflect the latest technologies and trends. This dynamism ensures that the list remains at the forefront of the industry.\n- **Opinionated**: Unlike ordinary library lists, Awesome Python includes subjective evaluations, meaning the recommended libraries are carefully selected and come with a certain level of quality assurance.\n- **Cross-Domain Integration**: It consolidates tools from different domains into a unified resource repository, enabling developers to conveniently access all the information they need in one place.\n\n---\n\n## 3. Inspiration for Startup Projects\nBased on the resources provided by Awesome Python, here are some great startup ideas:\n\n### **Data Analysis and Visualization**\n- **Project Idea**: Data Analysis Platform  \n  - Using libraries like `pandas` and `matplotlib`, build an easy-to-use platform for data analysis and visualization to help businesses quickly understand their data.\n- **Project Idea**: Automated Report Generation Tool  \n  - Combining `seaborn` and `plotnine`, develop a tool that automatically generates professional charts and reports.\n\n### **Artificial Intelligence and Machine Learning**\n- **Project Idea**: Intelligent Customer Service System  \n  - Use `spaCy` or `transformers` to build a multi-language intelligent customer service robot suitable for e-commerce platforms or enterprise services.\n- **Project Idea**: Image Recognition Application  \n  - Based on `tensorflow` or `pytorch`, develop an image recognition tool, such as one for medical imaging analysis or product image classification.\n\n### **Web Development**\n- **Project Idea**: Low-Code Web Development Platform  \n  - Leveraging `Django` or `Flask`, create a drag-and-drop interface generator so non-technical users can quickly build websites.\n- **Project Idea**: Real-Time Collaborative Editing Tool  \n  - Using `Socket.IO` and `Tornado`, develop a real-time collaborative editing tool similar to Google Docs.\n\n### **Educational Technology**\n- **Project Idea**: Programming Learning Platform  \n  - Integrating `IPython` and `Jupyter Notebook`, design an interactive programming learning platform that supports instant feedback and code execution.\n- **Project Idea**: AI-Assisted Teaching System  \n  - Combining `NLTK` and `gensim`, create a personalized learning path recommendation system that adjusts course content based on students' learning habits.\n\n### **Internet of Things (IoT) and Hardware**\n- **Project Idea**: Smart Home Control Center  \n  - Use `scapy` and `keyboard` to control home devices and develop a smart home management system.\n- **Project Idea**: Hardware Monitoring Platform  \n  - Based on `psutil` and `paramiko`, build a remote server and device monitoring platform.\n\n### **Productivity Tools**\n- **Project Idea**: Automated Workflow Tool  \n  - Combining `Airflow` and `Celery`, develop an enterprise-level task scheduling and automation tool.\n- **Project Idea**: Documentation Generation Assistant  \n  - Using `Sphinx` and `pdoc`, create a documentation auto-generation tool to simplify the process of writing documentation for developers.\n\n---\n\nBy following the above ideas and leveraging the rich resources available in Awesome Python, entrepreneurs can quickly identify entry points and accelerate the product development process.",
    "text": "Awesome Python\nAn opinionated list of awesome Python frameworks, libraries, software and resources.\nInspired by\nawesome-php\n.\nAwesome Python\nAdmin Panels\nAlgorithms and Design Patterns\nASGI Servers\nAsynchronous Programming\nAudio\nAuthentication\nBuild Tools\nBuilt-in Classes Enhancement\nCaching\nChatOps Tools\nCMS\nCode Analysis\nCommand-line Interface Development\nCommand-line Tools\nComputer Vision\nConfiguration Files\nCryptography\nData Analysis\nData Validation\nData Visualization\nDatabase Drivers\nDatabase\nDate and Time\nDebugging Tools\nDeep Learning\nDevOps Tools\nDistributed Computing\nDistribution\nDocumentation\nDownloader\nEditor Plugins and IDEs\nEmail\nEnvironment Management\nFile Manipulation\nFunctional Programming\nGame Development\nGeolocation\nGUI Development\nHardware\nHTML Manipulation\nHTTP Clients\nImage Processing\nImplementations\nInteractive Interpreter\nInternationalization\nJob Scheduler\nLogging\nMachine Learning\nMiscellaneous\nNatural Language Processing\nNetwork Virtualization\nNews Feed\nORM\nPackage Management\nPackage Repositories\nPenetration testing\nPermissions\nProcesses\nRecommender Systems\nRefactoring\nRESTful API\nRobotics\nRPC Servers\nScience\nSearch\nSerialization\nServerless Frameworks\nShell\nSpecific Formats Processing\nStatic Site Generator\nTagging\nTask Queues\nTemplate Engine\nTesting\nText Processing\nThird-party APIs\nURL Manipulation\nVideo\nWeb Asset Management\nWeb Content Extracting\nWeb Crawling\nWeb Frameworks\nWebSocket\nWSGI Servers\nResources\nNewsletters\nPodcasts\nContributing\nAdmin Panels\nLibraries for administrative interfaces.\najenti\n- The admin panel your servers deserve.\ndjango-grappelli\n- A jazzy skin for the Django Admin-Interface.\nflask-admin\n- Simple and extensible administrative interface framework for Flask.\nflower\n- Real-time monitor and web admin for Celery.\njet-bridge\n- Admin panel framework for any application with nice UI (ex Jet Django).\nwooey\n- A Django app which creates automatic web UIs for Python scripts.\nstreamlit\n- A framework which lets you build dashboards, generate reports, or create chat apps in minutes.\nAlgorithms and Design Patterns\nPython implementation of data structures, algorithms and design patterns. Also see\nawesome-algorithms\n.\nAlgorithms\nalgorithms\n- Minimal examples of data structures and algorithms.\npython-ds\n- A collection of data structure and algorithms for coding interviews.\nsortedcontainers\n- Fast and pure-Python implementation of sorted collections.\nthealgorithms\n- All Algorithms implemented in Python.\nDesign Patterns\npypattyrn\n- A simple yet effective library for implementing common design patterns.\npython-patterns\n- A collection of design patterns in Python.\ntransitions\n- A lightweight, object-oriented finite state machine implementation.\nASGI Servers\nASGI\n-compatible web servers.\ndaphne\n- A HTTP, HTTP2 and WebSocket protocol server for ASGI and ASGI-HTTP.\nuvicorn\n- A lightning-fast ASGI server implementation, using uvloop and httptools.\nhypercorn\n- An ASGI and WSGI Server based on Hyper libraries and inspired by Gunicorn.\nAsynchronous Programming\nLibraries for asynchronous, concurrent and parallel execution. Also see\nawesome-asyncio\n.\nasyncio\n- (Python standard library) Asynchronous I/O, event loop, coroutines and tasks.\nawesome-asyncio\nconcurrent.futures\n- (Python standard library) A high-level interface for asynchronously executing callables.\nmultiprocessing\n- (Python standard library) Process-based parallelism.\ntrio\n- A friendly library for async concurrency and I/O.\ntwisted\n- An event-driven networking engine.\nuvloop\n- Ultra fast asyncio event loop.\neventlet\n- Asynchronous framework with WSGI support.\ngevent\n- A coroutine-based Python networking library that uses\ngreenlet\n.\nAudio\nLibraries for manipulating audio and its metadata.\nAudio\naudioread\n- Cross-library (GStreamer + Core Audio + MAD + FFmpeg) audio decoding.\naudioFlux\n- A library for audio and music analysis, feature extraction.\ndejavu\n- Audio fingerprinting and recognition.\nkapre\n- Keras Audio Preprocessors.\nlibrosa\n- Python library for audio and music analysis.\nmatchering\n- A library for automated reference audio mastering.\nmingus\n- An advanced music theory and notation package with MIDI file and playback support.\npyaudioanalysis\n- Audio feature extraction, classification, segmentation and applications.\npydub\n- Manipulate audio with a simple and easy high level interface.\ntimeside\n- Open web audio processing framework.\nMetadata\nbeets\n- A music library manager and\nMusicBrainz\ntagger.\neyed3\n- A tool for working with audio files, specifically MP3 files containing ID3 metadata.\nmutagen\n- A Python module to handle audio metadata.\ntinytag\n- A library for reading music meta data of MP3, OGG, FLAC and Wave files.\nAuthentication\nLibraries for implementing authentications schemes.\nOAuth\nauthlib\n- JavaScript Object Signing and Encryption draft implementation.\ndjango-allauth\n- Authentication app for Django that \"just works.\"\ndjango-oauth-toolkit\n- OAuth 2 goodies for Django.\noauthlib\n- A generic and thorough implementation of the OAuth request-signing logic.\nJWT\npyjwt\n- JSON Web Token implementation in Python.\npython-jose\n- A JOSE implementation in Python.\nBuild Tools\nCompile software from source code.\nbitbake\n- A make-like build tool for embedded Linux.\nbuildout\n- A build system for creating, assembling and deploying applications from multiple parts.\nplatformio\n- A console tool to build code with different development platforms.\npybuilder\n- A continuous build tool written in pure Python.\nscons\n- A software construction tool.\nBuilt-in Classes Enhancement\nLibraries for enhancing Python built-in classes.\nattrs\n- Replacement for\n__init__\n,\n__eq__\n,\n__repr__\n, etc. boilerplate in class definitions.\nbidict\n- Efficient, Pythonic bidirectional map data structures and related functionality..\nbox\n- Python dictionaries with advanced dot notation access.\ndataclasses\n- (Python standard library) Data classes.\ndotteddict\n- A library that provides a method of accessing lists and dicts with a dotted path notation.\nCMS\nContent Management Systems.\nfeincms\n- One of the most advanced Content Management Systems built on Django.\nindico\n- A feature-rich event management system, made @\nCERN\n.\nwagtail\n- A Django content management system.\nCaching\nLibraries for caching data.\nbeaker\n- A WSGI middleware for sessions and caching.\ndjango-cache-machine\n- Automatic caching and invalidation for Django models.\ndjango-cacheops\n- A slick ORM cache with automatic granular event-driven invalidation.\ndogpile.cache\n- dogpile.cache is a next generation replacement for Beaker made by the same authors.\nhermescache\n- Python caching library with tag-based invalidation and dogpile effect prevention.\npylibmc\n- A Python wrapper around the\nlibmemcached\ninterface.\npython-diskcache\n- SQLite and file backed cache backend with faster lookups than memcached and redis.\nChatOps Tools\nLibraries for chatbot development.\nerrbot\n- The easiest and most popular chatbot to implement ChatOps.\nCode Analysis\nTools of static analysis, linters and code quality checkers. Also see\nawesome-static-analysis\n.\nCode Analysis\ncode2flow\n- Turn your Python and JavaScript code into DOT flowcharts.\nprospector\n- A tool to analyse Python code.\nvulture\n- A tool for finding and analysing dead Python code.\nCode Linters\nflake8\n- A wrapper around\npycodestyle\n,\npyflakes\nand McCabe.\nawesome-flake8-extensions\npylint\n- A fully customizable source code analyzer.\nCode Formatters\nblack\n- The uncompromising Python code formatter.\nisort\n- A Python utility / library to sort imports.\nyapf\n- Yet another Python code formatter from Google.\nStatic Type Checkers, also see\nawesome-python-typing\nmypy\n- Check variable types during compile time.\npyre-check\n- Performant type checking.\ntypeshed\n- Collection of library stubs for Python, with static types.\nStatic Type Annotations Generators\nmonkeytype\n- A system for Python that generates static type annotations by collecting runtime types.\npytype\n- Pytype checks and infers types for Python code - without requiring type annotations.\nCommand-line Interface Development\nLibraries for building command-line applications.\nCommand-line Application Development\ncement\n- CLI Application Framework for Python.\nclick\n- A package for creating beautiful command line interfaces in a composable way.\ncliff\n- A framework for creating command-line programs with multi-level commands.\npython-fire\n- A library for creating command line interfaces from absolutely any Python object.\npython-prompt-toolkit\n- A library for building powerful interactive command lines.\nTerminal Rendering\nalive-progress\n- A new kind of Progress Bar, with real-time throughput, eta and very cool animations.\nasciimatics\n- A package to create full-screen text UIs (from interactive forms to ASCII animations).\nbashplotlib\n- Making basic plots in the terminal.\ncolorama\n- Cross-platform colored terminal text.\nrich\n- Python library for rich text and beautiful formatting in the terminal. Also provides a great\nRichHandler\nlog handler.\ntqdm\n- Fast, extensible progress bar for loops and CLI.\nCommand-line Tools\nUseful CLI-based tools for productivity.\nProductivity Tools\ncopier\n- A library and command-line utility for rendering projects templates.\ncookiecutter\n- A command-line utility that creates projects from cookiecutters (project templates).\ndoitlive\n- A tool for live presentations in the terminal.\nhowdoi\n- Instant coding answers via the command line.\ninvoke\n- A tool for managing shell-oriented subprocesses and organizing executable Python code into CLI-invokable tasks.\npathpicker\n- Select files out of bash output.\nthefuck\n- Correcting your previous console command.\ntmuxp\n- A\ntmux\nsession manager.\ntry\n- A dead simple CLI to try out python packages - it's never been easier.\nCLI Enhancements\nhttpie\n- A command line HTTP client, a user-friendly cURL replacement.\niredis\n- Redis CLI with autocompletion and syntax highlighting.\nlitecli\n- SQLite CLI with autocompletion and syntax highlighting.\nmycli\n- MySQL CLI with autocompletion and syntax highlighting.\npgcli\n- PostgreSQL CLI with autocompletion and syntax highlighting.\nComputer Vision\nLibraries for Computer Vision.\neasyocr\n- Ready-to-use OCR with 40+ languages supported.\nkornia\n- Open Source Differentiable Computer Vision Library for PyTorch.\nopencv\n- Open Source Computer Vision Library.\npytesseract\n- A wrapper for\nGoogle Tesseract OCR\n.\ntesserocr\n- Another simple, Pillow-friendly, wrapper around the\ntesseract-ocr\nAPI for OCR.\nConfiguration Files\nLibraries for storing and parsing configuration options.\nconfigparser\n- (Python standard library) INI file parser.\nconfigobj\n- INI file parser with validation.\nhydra\n- Hydra is a framework for elegantly configuring complex applications.\npython-decouple\n- Strict separation of settings from code.\nCryptography\ncryptography\n- A package designed to expose cryptographic primitives and recipes to Python developers.\nparamiko\n- The leading native Python SSHv2 protocol library.\npynacl\n- Python binding to the Networking and Cryptography (NaCl) library.\nData Analysis\nLibraries for data analyzing.\npandas\n- A library providing high-performance, easy-to-use data structures and data analysis tools.\naws-sdk-pandas\n- Pandas on AWS.\ndatasette\n- An open source multi-tool for exploring and publishing data.\noptimus\n- Agile Data Science Workflows made easy with PySpark.\nData Validation\nLibraries for validating data. Used for forms in many cases.\ncerberus\n- A lightweight and extensible data validation library.\ncolander\n- Validating and deserializing data obtained via XML, JSON, an HTML form post.\njsonschema\n- An implementation of\nJSON Schema\nfor Python.\nschema\n- A library for validating Python data structures.\nschematics\n- Data Structure Validation.\nvoluptuous\n- A Python data validation library.\npydantic\n- Data validation using Python type hints.\nData Visualization\nLibraries for visualizing data. Also see\nawesome-javascript\n.\naltair\n- Declarative statistical visualization library for Python.\nbokeh\n- Interactive Web Plotting for Python.\nbqplot\n- Interactive Plotting Library for the Jupyter Notebook.\ncartopy\n- A cartographic python library with matplotlib support.\ndiagrams\n- Diagram as Code.\nmatplotlib\n- A Python 2D plotting library.\nplotnine\n- A grammar of graphics for Python based on ggplot2.\npygal\n- A Python SVG Charts Creator.\npygraphviz\n- Python interface to\nGraphviz\n.\npyqtgraph\n- Interactive and realtime 2D/3D/Image plotting and science/engineering widgets.\nseaborn\n- Statistical data visualization using Matplotlib.\nvispy\n- High-performance scientific visualization based on OpenGL.\nDatabase\nDatabases implemented in Python.\npickleDB\n- A simple and lightweight key-value store for Python.\ntinydb\n- A tiny, document-oriented database.\nzodb\n- A native object database for Python. A key-value and object graph database.\nDatabase Drivers\nLibraries for connecting and operating databases.\nMySQL -\nawesome-mysql\nmysqlclient\n- MySQL connector with Python 3 support (\nmysql-python\nfork).\npymysql\n- A pure Python MySQL driver compatible to mysql-python.\nPostgreSQL -\nawesome-postgres\npsycopg\n- The most popular PostgreSQL adapter for Python.\nSQlite -\nawesome-sqlite\nsqlite3\n- (Python standard library) SQlite interface compliant with DB-API 2.0.\nsqlite-utils\n- Python CLI utility and library for manipulating SQLite databases.\nOther Relational Databases\npymssql\n- A simple database interface to Microsoft SQL Server.\nclickhouse-driver\n- Python driver with native interface for ClickHouse.\nNoSQL Databases\ncassandra-driver\n- The Python Driver for Apache Cassandra.\nhappybase\n- A developer-friendly library for Apache HBase.\nkafka-python\n- The Python client for Apache Kafka.\npymongo\n- The official Python client for MongoDB.\nmotor\n- The async Python driver for MongoDB.\nredis-py\n- The Python client for Redis.\nDate and Time\nLibraries for working with dates and times.\narrow\n- A Python library that offers a sensible and human-friendly approach to creating, manipulating, formatting and converting dates, times and timestamps.\ndateutil\n- Extensions to the standard Python\ndatetime\nmodule.\npendulum\n- Python datetimes made easy.\npytz\n- World timezone definitions, modern and historical. Brings the\ntz database\ninto Python.\nDebugging Tools\nLibraries for debugging code.\npdb-like Debugger\nipdb\n- IPython-enabled\npdb\n.\npudb\n- A full-screen, console-based Python debugger.\nTracing\nmanhole\n- Debugging UNIX socket connections and present the stacktraces for all threads and an interactive prompt.\npython-hunter\n- A flexible code tracing toolkit.\nProfiler\npy-spy\n- A sampling profiler for Python programs. Written in Rust.\nvprof\n- Visual Python profiler.\nOthers\ndjango-debug-toolbar\n- Display various debug information for Django.\nflask-debugtoolbar\n- A port of the django-debug-toolbar to flask.\nicecream\n- Inspect variables, expressions, and program execution with a single, simple function call.\npyelftools\n- Parsing and analyzing ELF files and DWARF debugging information.\nDeep Learning\nFrameworks for Neural Networks and Deep Learning. Also see\nawesome-deep-learning\n.\nkeras\n- A high-level neural networks library and capable of running on top of either TensorFlow or Theano.\npytorch\n- Tensors and Dynamic neural networks in Python with strong GPU acceleration.\npytorch-lightning\n- Deep learning framework to train, deploy, and ship AI products Lightning fast.\nstable-baselines3\n- PyTorch implementations of Stable Baselines (deep) reinforcement learning algorithms.\ntensorflow\n- The most popular Deep Learning framework created by Google.\ntheano\n- A library for fast numerical computation.\nDevOps Tools\nSoftware and libraries for DevOps.\nConfiguration Management\nansible\n- A radically simple IT automation platform.\ncloudinit\n- A multi-distribution package that handles early initialization of a cloud instance.\nopenstack\n- Open source software for building private and public clouds.\npyinfra\n- A versatile CLI tools and python libraries to automate infrastructure.\nsaltstack\n- Infrastructure automation and management system.\nSSH-style Deployment\ncuisine\n- Chef-like functionality for Fabric.\nfabric\n- A simple, Pythonic tool for remote execution and deployment.\nProcess Management\nsupervisor\n- Supervisor process control system for UNIX.\nMonitoring\npsutil\n- A cross-platform process and system utilities module.\nBackup\nborg\n- A deduplicating archiver with compression and encryption.\nDistributed Computing\nFrameworks and libraries for Distributed Computing.\nBatch Processing\ndask\n- A flexible parallel computing library for analytic computing.\nluigi\n- A module that helps you build complex pipelines of batch jobs.\nPySpark\n-\nApache Spark\nPython API.\nRay\n- A system for parallel and distributed Python that unifies the machine learning ecosystem.\nStream Processing\nfaust\n- A stream processing library, porting the ideas from\nKafka Streams\nto Python.\nstreamparse\n- Run Python code against real-time streams of data via\nApache Storm\n.\nDistribution\nLibraries to create packaged executables for release distribution.\npy2app\n- Freezes Python scripts (Mac OS X).\npy2exe\n- Freezes Python scripts (Windows).\npyarmor\n- A tool used to obfuscate python scripts, bind obfuscated scripts to fixed machine or expire obfuscated scripts.\npyinstaller\n- Converts Python programs into stand-alone executables (cross-platform).\nshiv\n- A command line utility for building fully self-contained zipapps (PEP 441), but with all their dependencies included.\nDocumentation\nLibraries for generating project documentation.\nsphinx\n- Python Documentation generator.\nawesome-sphinxdoc\npdoc\n- Epydoc replacement to auto generate API documentation for Python libraries.\nDownloader\nLibraries for downloading.\nakshare\n- A financial data interface library, built for human beings!\ns3cmd\n- A command line tool for managing Amazon S3 and CloudFront.\nyoutube-dl\n- A command-line program to download videos from YouTube and other video sites.\nEditor Plugins and IDEs\nEmacs\nelpy\n- Emacs Python Development Environment.\nVim\njedi-vim\n- Vim bindings for the Jedi auto-completion library for Python.\npython-mode\n- An all in one plugin for turning Vim into a Python IDE.\nYouCompleteMe\n- Includes\nJedi\n-based completion engine for Python.\nVisual Studio\nPTVS\n- Python Tools for Visual Studio.\nVisual Studio Code\nPython\n- The official VSCode extension with rich support for Python.\nIDE\nPyCharm\n- Commercial Python IDE by JetBrains. Has free community edition available.\nspyder\n- Open Source Python IDE.\nEmail\nLibraries for sending and parsing email.\nMail Servers\nmodoboa\n- A mail hosting and management platform including a modern Web UI.\nsalmon\n- A Python Mail Server.\nClients\nimbox\n- Python IMAP for Humans.\nyagmail\n- Yet another Gmail/SMTP client.\nOthers\nflanker\n- An email address and Mime parsing library.\nmailer\n- High-performance extensible mail delivery framework.\nEnvironment Management\nLibraries for Python version and virtual environment management.\npyenv\n- Simple Python version management.\nvirtualenv\n- A tool to create isolated Python environments.\nFile Manipulation\nLibraries for file manipulation.\nmimetypes\n- (Python standard library) Map filenames to MIME types.\npathlib\n- (Python standard library) An cross-platform, object-oriented path library.\npath.py\n- A module wrapper for\nos.path\n.\npython-magic\n- A Python interface to the libmagic file type identification library.\nwatchdog\n- API and shell utilities to monitor file system events.\nFunctional Programming\nFunctional Programming with Python.\ncoconut\n- A variant of Python built for simple, elegant, Pythonic functional programming.\nfuncy\n- A fancy and practical functional tools.\nmore-itertools\n- More routines for operating on iterables, beyond\nitertools\n.\nreturns\n- A set of type-safe monads, transformers, and composition utilities.\ncytoolz\n- Cython implementation of\nToolz\n: High performance functional utilities.\ntoolz\n- A collection of functional utilities for iterators, functions, and dictionaries.\nGUI Development\nLibraries for working with graphical user interface applications.\ncurses\n- Built-in wrapper for\nncurses\nused to create terminal GUI applications.\nEel\n- A library for making simple Electron-like offline HTML/JS GUI apps.\nenaml\n- Creating beautiful user-interfaces with Declarative Syntax like QML.\nFlexx\n- Flexx is a pure Python toolkit for creating GUI's, that uses web technology for its rendering.\nGooey\n- Turn command line programs into a full GUI application with one line.\nkivy\n- A library for creating NUI applications, running on Windows, Linux, Mac OS X, Android and iOS.\npyglet\n- A cross-platform windowing and multimedia library for Python.\nPyGObject\n- Python Bindings for GLib/GObject/GIO/GTK+ (GTK+3).\nPyQt\n- Python bindings for the\nQt\ncross-platform application and UI framework.\nPySimpleGUI\n- Wrapper for tkinter, Qt, WxPython and Remi.\npywebview\n- A lightweight cross-platform native wrapper around a webview component.\nTkinter\n- Tkinter is Python's de-facto standard GUI package.\nToga\n- A Python native, OS native GUI toolkit.\nurwid\n- A library for creating terminal GUI applications with strong support for widgets, events, rich colors, etc.\nwxPython\n- A blending of the wxWidgets C++ class library with the Python.\nDearPyGui\n- A Simple GPU accelerated Python GUI framework\nGraphQL\nLibraries for working with GraphQL.\ngraphene\n- GraphQL framework for Python.\nGame Development\nAwesome game development libraries.\nArcade\n- Arcade is a modern Python framework for crafting games with compelling graphics and sound.\nCocos2d\n- cocos2d is a framework for building 2D games, demos, and other graphical/interactive applications.\nHarfang3D\n- Python framework for 3D, VR and game development.\nPanda3D\n- 3D game engine developed by Disney.\nPygame\n- Pygame is a set of Python modules designed for writing games.\nPyOgre\n- Python bindings for the Ogre 3D render engine, can be used for games, simulations, anything 3D.\nPyOpenGL\n- Python ctypes bindings for OpenGL and it's related APIs.\nPySDL2\n- A ctypes based wrapper for the SDL2 library.\nRenPy\n- A Visual Novel engine.\nGeolocation\nLibraries for geocoding addresses and working with latitudes and longitudes.\ndjango-countries\n- A Django app that provides a country field for models and forms.\ngeodjango\n- A world-class geographic web framework.\ngeojson\n- Python bindings and utilities for GeoJSON.\ngeopy\n- Python Geocoding Toolbox.\nHTML Manipulation\nLibraries for working with HTML and XML.\nbeautifulsoup\n- Providing Pythonic idioms for iterating, searching, and modifying HTML or XML.\nbleach\n- A whitelist-based HTML sanitization and text linkification library.\ncssutils\n- A CSS library for Python.\nhtml5lib\n- A standards-compliant library for parsing and serializing HTML documents and fragments.\nlxml\n- A very fast, easy-to-use and versatile library for handling HTML and XML.\nmarkupsafe\n- Implements a XML/HTML/XHTML Markup safe string for Python.\npyquery\n- A jQuery-like library for parsing HTML.\nuntangle\n- Converts XML documents to Python objects for easy access.\nWeasyPrint\n- A visual rendering engine for HTML and CSS that can export to PDF.\nxmldataset\n- Simple XML Parsing.\nxmltodict\n- Working with XML feel like you are working with JSON.\nHTTP Clients\nLibraries for working with HTTP.\nhttpx\n- A next generation HTTP client for Python.\nrequests\n- HTTP Requests for Humans.\ntreq\n- Python requests like API built on top of Twisted's HTTP client.\nurllib3\n- A HTTP library with thread-safe connection pooling, file post support, sanity friendly.\nHardware\nLibraries for programming with hardware.\nkeyboard\n- Hook and simulate global keyboard events on Windows and Linux.\nmouse\n- Hook and simulate global mouse events on Windows and Linux.\npynput\n- A library to control and monitor input devices.\nscapy\n- A brilliant packet manipulation library.\nImage Processing\nLibraries for manipulating images.\npillow\n- Pillow is the friendly\nPIL\nfork.\npython-barcode\n- Create barcodes in Python with no extra dependencies.\npymatting\n- A library for alpha matting.\npython-qrcode\n- A pure Python QR Code generator.\npywal\n- A tool that generates color schemes from images.\npyvips\n- A fast image processing library with low memory needs.\nquads\n- Computer art based on quadtrees.\nscikit-image\n- A Python library for (scientific) image processing.\nthumbor\n- A smart imaging service. It enables on-demand crop, re-sizing and flipping of images.\nwand\n- Python bindings for\nMagickWand\n, C API for ImageMagick.\nImplementations\nImplementations of Python.\ncpython\n-\nDefault, most widely used implementation of the Python programming language written in C.\ncython\n- Optimizing Static Compiler for Python.\nclpython\n- Implementation of the Python programming language written in Common Lisp.\nironpython\n- Implementation of the Python programming language written in C#.\nmicropython\n- A lean and efficient Python programming language implementation.\nnumba\n- Python JIT compiler to LLVM aimed at scientific Python.\npeachpy\n- x86-64 assembler embedded in Python.\npypy\n- A very fast and compliant implementation of the Python language.\npyston\n- A Python implementation using JIT techniques.\nInteractive Interpreter\nInteractive Python interpreters (REPL).\nbpython\n- A fancy interface to the Python interpreter.\nJupyter Notebook (IPython)\n- A rich toolkit to help you make the most out of using Python interactively.\nawesome-jupyter\nptpython\n- Advanced Python REPL built on top of the\npython-prompt-toolkit\n.\nInternationalization\nLibraries for working with i18n.\nBabel\n- An internationalization library for Python.\nPyICU\n- A wrapper of International Components for Unicode C++ library (\nICU\n).\nJob Scheduler\nLibraries for scheduling jobs.\nAirflow\n- Airflow is a platform to programmatically author, schedule and monitor workflows.\nAPScheduler\n- A light but powerful in-process task scheduler that lets you schedule functions.\ndjango-schedule\n- A calendaring app for Django.\ndoit\n- A task runner and build tool.\ngunnery\n- Multipurpose task execution tool for distributed systems with web-based interface.\nJoblib\n- A set of tools to provide lightweight pipelining in Python.\nPlan\n- Writing crontab file in Python like a charm.\nPrefect\n- A modern workflow orchestration framework that makes it easy to build, schedule and monitor robust data pipelines.\nschedule\n- Python job scheduling for humans.\nSpiff\n- A powerful workflow engine implemented in pure Python.\nTaskFlow\n- A Python library that helps to make task execution easy, consistent and reliable.\nLogging\nLibraries for generating and working with logs.\nlogbook\n- Logging replacement for Python.\nlogging\n- (Python standard library) Logging facility for Python.\nloguru\n- Library which aims to bring enjoyable logging in Python.\nsentry-python\n- Sentry SDK for Python.\nstructlog\n- Structured logging made easy.\nMachine Learning\nLibraries for Machine Learning. Also see\nawesome-machine-learning\n.\ngym\n- A toolkit for developing and comparing reinforcement learning algorithms.\nH2O\n- Open Source Fast Scalable Machine Learning Platform.\nMetrics\n- Machine learning evaluation metrics.\nNuPIC\n- Numenta Platform for Intelligent Computing.\nscikit-learn\n- The most popular Python library for Machine Learning.\nSpark ML\n-\nApache Spark\n's scalable Machine Learning library.\nvowpal_porpoise\n- A lightweight Python wrapper for\nVowpal Wabbit\n.\nxgboost\n- A scalable, portable, and distributed gradient boosting library.\nMindsDB\n- MindsDB is an open source AI layer for existing databases that allows you to effortlessly develop, train and deploy state-of-the-art machine learning models using standard queries.\nMicrosoft Windows\nPython programming on Microsoft Windows.\nPython(x,y)\n- Scientific-applications-oriented Python Distribution based on Qt and Spyder.\npythonlibs\n- Unofficial Windows binaries for Python extension packages.\nPythonNet\n- Python Integration with the .NET Common Language Runtime (CLR).\nPyWin32\n- Python Extensions for Windows.\nWinPython\n- Portable development environment for Windows 7/8.\nMiscellaneous\nUseful libraries or tools that don't fit in the categories above.\nblinker\n- A fast Python in-process signal/event dispatching system.\nboltons\n- A set of pure-Python utilities.\nitsdangerous\n- Various helpers to pass trusted data to untrusted environments.\nmagenta\n- A tool to generate music and art using artificial intelligence.\npluginbase\n- A simple but flexible plugin system for Python.\ntryton\n- A general purpose business framework.\nNatural Language Processing\nLibraries for working with human languages.\nGeneral\ngensim\n- Topic Modeling for Humans.\nlangid.py\n- Stand-alone language identification system.\nnltk\n- A leading platform for building Python programs to work with human language data.\npattern\n- A web mining module.\npolyglot\n- Natural language pipeline supporting hundreds of languages.\npytext\n- A natural language modeling framework based on PyTorch.\nPyTorch-NLP\n- A toolkit enabling rapid deep learning NLP prototyping for research.\nspacy\n- A library for industrial-strength natural language processing in Python and Cython.\nStanza\n- The Stanford NLP Group's official Python library, supporting 60+ languages.\nChinese\nfunNLP\n- A collection of tools and datasets for Chinese NLP.\njieba\n- The most popular Chinese text segmentation library.\npkuseg-python\n- A toolkit for Chinese word segmentation in various domains.\nsnownlp\n- A library for processing Chinese text.\nNetwork Virtualization\nTools and libraries for Virtual Networking and SDN (Software Defined Networking).\nmininet\n- A popular network emulator and API written in Python.\nnapalm\n- Cross-vendor API to manipulate network devices.\npox\n- A Python-based SDN control applications, such as OpenFlow SDN controllers.\nNews Feed\nLibraries for building user's activities.\ndjango-activity-stream\n- Generating generic activity streams from the actions on your site.\nStream Framework\n- Building news feed and notification systems using Cassandra and Redis.\nORM\nLibraries that implement Object-Relational Mapping or data mapping techniques.\nRelational Databases\nDjango Models\n- The Django ORM.\nSQLAlchemy\n- The Python SQL Toolkit and Object Relational Mapper.\nawesome-sqlalchemy\ndataset\n- Store Python dicts in a database - works with SQLite, MySQL, and PostgreSQL.\norator\n-  The Orator ORM provides a simple yet beautiful ActiveRecord implementation.\norm\n- An async ORM.\npeewee\n- A small, expressive ORM.\npony\n- ORM that provides a generator-oriented interface to SQL.\npydal\n- A pure Python Database Abstraction Layer.\nNoSQL Databases\nhot-redis\n- Rich Python data types for Redis.\nmongoengine\n- A Python Object-Document-Mapper for working with MongoDB.\nPynamoDB\n- A Pythonic interface for\nAmazon DynamoDB\n.\nredisco\n- A Python Library for Simple Models and Containers Persisted in Redis.\nPackage Management\nLibraries for package and dependency management.\npip\n- The package installer for Python.\npip-tools\n- A set of tools to keep your pinned Python dependencies fresh.\nPyPI\nconda\n- Cross-platform, Python-agnostic binary package manager.\npoetry\n- Python dependency management and packaging made easy.\nPackage Repositories\nLocal PyPI repository server and proxies.\nbandersnatch\n- PyPI mirroring tool provided by Python Packaging Authority (PyPA).\ndevpi\n- PyPI server and packaging/testing/release tool.\nlocalshop\n- Local PyPI server (custom packages and auto-mirroring of pypi).\nwarehouse\n- Next generation Python Package Repository (PyPI).\nPenetration Testing\nFrameworks and tools for penetration testing.\nfsociety\n- A Penetration testing framework.\nsetoolkit\n- A toolkit for social engineering.\nsqlmap\n- Automatic SQL injection and database takeover tool.\nPermissions\nLibraries that allow or deny users access to data or functionality.\ndjango-guardian\n- Implementation of per object permissions for Django 1.2+\ndjango-rules\n- A tiny but powerful app providing object-level permissions to Django, without requiring a database.\nProcesses\nLibraries for starting and communicating with OS processes.\ndelegator.py\n-\nSubprocesses\nfor Humans 2.0.\nsarge\n- Yet another wrapper for subprocess.\nsh\n- A full-fledged subprocess replacement for Python.\nRecommender Systems\nLibraries for building recommender systems.\nannoy\n- Approximate Nearest Neighbors in C++/Python optimized for memory usage.\nfastFM\n- A library for Factorization Machines.\nimplicit\n- A fast Python implementation of collaborative filtering for implicit datasets.\nlibffm\n- A library for Field-aware Factorization Machine (FFM).\nlightfm\n- A Python implementation of a number of popular recommendation algorithms.\nspotlight\n- Deep recommender models using PyTorch.\nSurprise\n- A scikit for building and analyzing recommender systems.\ntensorrec\n- A Recommendation Engine Framework in TensorFlow.\nRefactoring\nRefactoring tools and libraries for Python\nBicycle Repair Man\n- Bicycle Repair Man, a refactoring tool for Python.\nBowler\n- Safe code refactoring for modern Python.\nRope\n-  Rope is a python refactoring library.\nRESTful API\nLibraries for building RESTful APIs.\nDjango\ndjango-rest-framework\n- A powerful and flexible toolkit to build web APIs.\ndjango-tastypie\n- Creating delicious APIs for Django apps.\nFlask\neve\n- REST API framework powered by Flask, MongoDB and good intentions.\nflask-api\n- Browsable Web APIs for Flask.\nflask-restful\n- Quickly building REST APIs for Flask.\nPyramid\ncornice\n- A RESTful framework for Pyramid.\nFramework agnostic\nfalcon\n- A high-performance framework for building cloud APIs and web app backends.\nfastapi\n- A modern, fast, web framework for building APIs with Python 3.6+ based on standard Python type hints.\nhug\n- A Python 3 framework for cleanly exposing APIs.\nsandman2\n- Automated REST APIs for existing database-driven systems.\nsanic\n- A Python 3.6+ web server and web framework that's written to go fast.\nRobotics\nLibraries for robotics.\nPythonRobotics\n- This is a compilation of various robotics algorithms with visualizations.\nrospy\n- This is a library for ROS (Robot Operating System).\nRPC Servers\nRPC-compatible servers.\nRPyC\n(Remote Python Call) - A transparent and symmetric RPC library for Python\nzeroRPC\n- zerorpc is a flexible RPC implementation based on\nZeroMQ\nand\nMessagePack\n.\nScience\nLibraries for scientific computing. Also see\nPython-for-Scientists\n.\nastropy\n- A community Python library for Astronomy.\nbcbio-nextgen\n- Providing best-practice pipelines for fully automated high throughput sequencing analysis.\nbccb\n- Collection of useful code related to biological analysis.\nBiopython\n- Biopython is a set of freely available tools for biological computation.\ncclib\n- A library for parsing and interpreting the results of computational chemistry packages.\nColour\n- Implementing a comprehensive number of colour theory transformations and algorithms.\nKarate Club\n- Unsupervised machine learning toolbox for graph structured data.\nNetworkX\n- A high-productivity software for complex networks.\nNIPY\n- A collection of neuroimaging toolkits.\nNumPy\n- A fundamental package for scientific computing with Python.\nObsPy\n- A Python toolbox for seismology.\nOpen Babel\n- A chemical toolbox designed to speak the many languages of chemical data.\nPyDy\n- Short for Python Dynamics, used to assist with workflow in the modeling of dynamic motion.\nPyMC\n- Markov Chain Monte Carlo sampling toolkit.\nQuTiP\n- Quantum Toolbox in Python.\nRDKit\n- Cheminformatics and Machine Learning Software.\nSciPy\n- A Python-based ecosystem of open-source software for mathematics, science, and engineering.\nSimPy\n-  A process-based discrete-event simulation framework.\nstatsmodels\n- Statistical modeling and econometrics in Python.\nSymPy\n- A Python library for symbolic mathematics.\nZipline\n- A Pythonic algorithmic trading library.\nSearch\nLibraries and software for indexing and performing search queries on data.\ndjango-haystack\n- Modular search for Django.\nelasticsearch-dsl-py\n- The official high-level Python client for Elasticsearch.\nelasticsearch-py\n- The official low-level Python client for\nElasticsearch\n.\npysolr\n- A lightweight Python wrapper for\nApache Solr\n.\nwhoosh\n- A fast, pure Python search engine library.\nSerialization\nLibraries for serializing complex data types\nmarshmallow\n- A lightweight library for converting complex objects to and from simple Python datatypes.\npysimdjson\n- A Python bindings for\nsimdjson\n.\npython-rapidjson\n- A Python wrapper around\nRapidJSON\n.\nultrajson\n- A fast JSON decoder and encoder written in C with Python bindings.\nServerless Frameworks\nFrameworks for developing serverless Python code.\npython-lambda\n- A toolkit for developing and deploying Python code in AWS Lambda.\nZappa\n- A tool for deploying WSGI applications on AWS Lambda and API Gateway.\nShell\nShells based on Python.\nxonsh\n- A Python-powered, cross-platform, Unix-gazing shell language and command prompt.\nSpecific Formats Processing\nLibraries for parsing and manipulating specific text formats.\nGeneral\ntablib\n- A module for Tabular Datasets in XLS, CSV, JSON, YAML.\nOffice\ndocxtpl\n- Editing a docx document by jinja2 template\nopenpyxl\n- A library for reading and writing Excel 2010 xlsx/xlsm/xltx/xltm files.\npyexcel\n- Providing one API for reading, manipulating and writing csv, ods, xls, xlsx and xlsm files.\npython-docx\n- Reads, queries and modifies Microsoft Word 2007/2008 docx files.\npython-pptx\n- Python library for creating and updating PowerPoint (.pptx) files.\nunoconv\n- Convert between any document format supported by LibreOffice/OpenOffice.\nXlsxWriter\n- A Python module for creating Excel .xlsx files.\nxlwings\n- A BSD-licensed library that makes it easy to call Python from Excel and vice versa.\nxlwt\n/\nxlrd\n- Writing and reading data and formatting information from Excel files.\nPDF\npdfminer.six\n- Pdfminer.six is a community maintained fork of the original PDFMiner.\nPyPDF2\n- A library capable of splitting, merging and transforming PDF pages.\nReportLab\n- Allowing Rapid creation of rich PDF documents.\nMarkdown\nMistune\n- Fastest and full featured pure Python parsers of Markdown.\nPython-Markdown\n- A Python implementation of John Gruber’s Markdown.\nYAML\nPyYAML\n- YAML implementations for Python.\nCSV\ncsvkit\n- Utilities for converting to and working with CSV.\nArchive\nunp\n- A command line tool that can unpack archives easily.\nStatic Site Generator\nStatic site generator is a software that takes some text + templates as input and produces HTML files on the output.\nlektor\n- An easy to use static CMS and blog engine.\nmkdocs\n- Markdown friendly documentation generator.\nmakesite\n- Simple, lightweight, and magic-free static site/blog generator (< 130 lines).\nnikola\n- A static website and blog generator.\npelican\n- Static site generator that supports Markdown and reST syntax.\nTagging\nLibraries for tagging items.\ndjango-taggit\n- Simple tagging for Django.\nTask Queues\nLibraries for working with task queues.\ncelery\n- An asynchronous task queue/job queue based on distributed message passing.\ndramatiq\n- A fast and reliable background task processing library for Python 3.\nhuey\n- Little multi-threaded task queue.\nmrq\n- A distributed worker task queue in Python using Redis & gevent.\nrq\n- Simple job queues for Python.\nTemplate Engine\nLibraries and tools for templating and lexing.\nGenshi\n- Python templating toolkit for generation of web-aware output.\nJinja2\n- A modern and designer friendly templating language.\nMako\n- Hyperfast and lightweight templating for the Python platform.\nTesting\nLibraries for testing codebases and generating test data.\nTesting Frameworks\nhypothesis\n- Hypothesis is an advanced Quickcheck style property based testing library.\nnose2\n- The successor to\nnose\n, based on `unittest2.\npytest\n- A mature full-featured Python testing tool.\nRobot Framework\n- A generic test automation framework.\nunittest\n- (Python standard library) Unit testing framework.\nTest Runners\ngreen\n- A clean, colorful test runner.\nmamba\n- The definitive testing tool for Python. Born under the banner of BDD.\ntox\n- Auto builds and tests distributions in multiple Python versions\nGUI / Web Testing\nlocust\n- Scalable user load testing tool written in Python.\nPyAutoGUI\n- PyAutoGUI is a cross-platform GUI automation Python module for human beings.\nSchemathesis\n- A tool for automatic property-based testing of web applications built with Open API / Swagger specifications.\nSelenium\n- Python bindings for\nSelenium\nWebDriver.\nsixpack\n- A language-agnostic A/B Testing framework.\nsplinter\n- Open source tool for testing web applications.\nMock\ndoublex\n- Powerful test doubles framework for Python.\nfreezegun\n- Travel through time by mocking the datetime module.\nhttmock\n- A mocking library for requests for Python 2.6+ and 3.2+.\nhttpretty\n- HTTP request mock tool for Python.\nmock\n- (Python standard library) A mocking and patching library.\nmocket\n- A socket mock framework with gevent/asyncio/SSL support.\nresponses\n- A utility library for mocking out the requests Python library.\nVCR.py\n- Record and replay HTTP interactions on your tests.\nObject Factories\nfactory_boy\n- A test fixtures replacement for Python.\nmixer\n- Another fixtures replacement. Supports Django, Flask, SQLAlchemy, Peewee and etc.\nmodel_mommy\n- Creating random fixtures for testing in Django.\nCode Coverage\ncoverage\n- Code coverage measurement.\nFake Data\nfake2db\n- Fake database generator.\nfaker\n- A Python package that generates fake data.\nmimesis\n- is a Python library that help you generate fake data.\nradar\n- Generate random datetime / time.\nText Processing\nLibraries for parsing and manipulating plain texts.\nGeneral\nchardet\n- Python 2/3 compatible character encoding detector.\ndifflib\n- (Python standard library) Helpers for computing deltas.\nftfy\n- Makes Unicode text less broken and more consistent automagically.\nfuzzywuzzy\n- Fuzzy String Matching.\nLevenshtein\n- Fast computation of Levenshtein distance and string similarity.\npangu.py\n- Paranoid text spacing.\npyfiglet\n- An implementation of figlet written in Python.\npypinyin\n- Convert Chinese hanzi (漢字) to pinyin (拼音).\ntextdistance\n- Compute distance between sequences with 30+ algorithms.\nunidecode\n- ASCII transliterations of Unicode text.\nSlugify\nawesome-slugify\n- A Python slugify library that can preserve unicode.\npython-slugify\n- A Python slugify library that translates unicode to ASCII.\nunicode-slugify\n- A slugifier that generates unicode slugs with Django as a dependency.\nUnique identifiers\nhashids\n- Implementation of\nhashids\nin Python.\nshortuuid\n- A generator library for concise, unambiguous and URL-safe UUIDs.\nParser\nply\n- Implementation of lex and yacc parsing tools for Python.\npygments\n- A generic syntax highlighter.\npyparsing\n- A general purpose framework for generating parsers.\npython-nameparser\n- Parsing human names into their individual components.\npython-phonenumbers\n- Parsing, formatting, storing and validating international phone numbers.\npython-user-agents\n- Browser user agent parser.\nsqlparse\n- A non-validating SQL parser.\nThird-party APIs\nLibraries for accessing third party services APIs. Also see\nList of Python API Wrappers and Libraries\n.\napache-libcloud\n- One Python library for all clouds.\nboto3\n- Python interface to Amazon Web Services.\ndjango-wordpress\n- WordPress models and views for Django.\nfacebook-sdk\n- Facebook Platform Python SDK.\ngoogle-api-python-client\n- Google APIs Client Library for Python.\ngspread\n- Google Spreadsheets Python API.\ntwython\n- A Python wrapper for the Twitter API.\nURL Manipulation\nLibraries for parsing URLs.\nfurl\n- A small Python library that makes parsing and manipulating URLs easy.\npurl\n- A simple, immutable URL class with a clean API for interrogation and manipulation.\npyshorteners\n- A pure Python URL shortening lib.\nwebargs\n- A friendly library for parsing HTTP request arguments with built-in support for popular web frameworks.\nVideo\nLibraries for manipulating video and GIFs.\nmoviepy\n- A module for script-based movie editing with many formats, including animated GIFs.\nscikit-video\n- Video processing routines for SciPy.\nvidgear\n- Most Powerful multi-threaded Video Processing framework.\nWeb Asset Management\nTools for managing, compressing and minifying website assets.\ndjango-compressor\n- Compresses linked and inline JavaScript or CSS into a single cached file.\ndjango-pipeline\n- An asset packaging library for Django.\ndjango-storages\n- A collection of custom storage back ends for Django.\nfanstatic\n- Packages, optimizes, and serves static file dependencies as Python packages.\nfileconveyor\n- A daemon to detect and sync files to CDNs, S3 and FTP.\nflask-assets\n- Helps you integrate webassets into your Flask app.\nwebassets\n- Bundles, optimizes, and manages unique cache-busting URLs for static resources.\nWeb Content Extracting\nLibraries for extracting web contents.\nhtml2text\n- Convert HTML to Markdown-formatted text.\nlassie\n- Web Content Retrieval for Humans.\nmicawber\n- A small library for extracting rich content from URLs.\nnewspaper\n- News extraction, article extraction and content curation in Python.\npython-readability\n- Fast Python port of arc90's readability tool.\nrequests-html\n- Pythonic HTML Parsing for Humans.\nsumy\n- A module for automatic summarization of text documents and HTML pages.\ntextract\n- Extract text from any document, Word, PowerPoint, PDFs, etc.\ntoapi\n- Every web site provides APIs.\nWeb Crawling\nLibraries to automate web scraping.\nfeedparser\n- Universal feed parser.\ngrab\n- Site scraping framework.\nmechanicalsoup\n- A Python library for automating interaction with websites.\nscrapy\n- A fast high-level screen scraping and web crawling framework.\nWeb Frameworks\nTraditional full stack web frameworks. Also see\nRESTful API\n.\nSynchronous\ndjango\n- The most popular web framework in Python.\nawesome-django\nawesome-django\nflask\n- A microframework for Python.\nawesome-flask\npyramid\n- A small, fast, down-to-earth, open source Python web framework.\nawesome-pyramid\nmasonite\n- The modern and developer centric Python web framework.\nAsynchronous\ntornado\n- A web framework and asynchronous networking library.\nWebSocket\nLibraries for working with WebSocket.\nautobahn-python\n- WebSocket & WAMP for Python on Twisted and\nasyncio\n.\nchannels\n- Developer-friendly asynchrony for Django.\nwebsockets\n- A library for building WebSocket servers and clients with a focus on correctness and simplicity.\nWSGI Servers\nWSGI-compatible web servers.\ngunicorn\n- Pre-forked, ported from Ruby's Unicorn project.\nuwsgi\n- A project aims at developing a full stack for building hosting services, written in C.\nwaitress\n- Multi-threaded, powers Pyramid.\nwerkzeug\n- A WSGI utility library for Python that powers Flask and can easily be embedded into your own projects.\nResources\nWhere to discover learning resources or new Python libraries.\nNewsletters\nAwesome Python Newsletter\nPycoder's Weekly\nPython Tricks\nPython Weekly\nPodcasts\nDjango Chat\nPython Bytes\nTalk Python To Me\nPython Test\nThe Real Python Podcast\nContributing\nYour contributions are always welcome! Please take a look at the\ncontribution guidelines\nfirst.\nIf you have any question about this opinionated list, do not hesitate to contact me\n@VintaChen\non Twitter or open an issue on GitHub.",
    "readme": "# Awesome Python [![Awesome](https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg)](https://github.com/sindresorhus/awesome)\n\nAn opinionated list of awesome Python frameworks, libraries, software and resources.\n\nInspired by [awesome-php](https://github.com/ziadoz/awesome-php).\n\n- [Awesome Python](#awesome-python)\n    - [Admin Panels](#admin-panels)\n    - [Algorithms and Design Patterns](#algorithms-and-design-patterns)\n    - [ASGI Servers](#asgi-servers)\n    - [Asynchronous Programming](#asynchronous-programming)\n    - [Audio](#audio)\n    - [Authentication](#authentication)\n    - [Build Tools](#build-tools)\n    - [Built-in Classes Enhancement](#built-in-classes-enhancement)\n    - [Caching](#caching)\n    - [ChatOps Tools](#chatops-tools)\n    - [CMS](#cms)\n    - [Code Analysis](#code-analysis)\n    - [Command-line Interface Development](#command-line-interface-development)\n    - [Command-line Tools](#command-line-tools)\n    - [Computer Vision](#computer-vision)\n    - [Configuration Files](#configuration-files)\n    - [Cryptography](#cryptography)\n    - [Data Analysis](#data-analysis)\n    - [Data Validation](#data-validation)\n    - [Data Visualization](#data-visualization)\n    - [Database Drivers](#database-drivers)\n    - [Database](#database)\n    - [Date and Time](#date-and-time)\n    - [Debugging Tools](#debugging-tools)\n    - [Deep Learning](#deep-learning)\n    - [DevOps Tools](#devops-tools)\n    - [Distributed Computing](#distributed-computing)\n    - [Distribution](#distribution)\n    - [Documentation](#documentation)\n    - [Downloader](#downloader)\n    - [Editor Plugins and IDEs](#editor-plugins-and-ides)\n    - [Email](#email)\n    - [Environment Management](#environment-management)\n    - [File Manipulation](#file-manipulation)\n    - [Functional Programming](#functional-programming)\n    - [Game Development](#game-development)\n    - [Geolocation](#geolocation)\n    - [GUI Development](#gui-development)\n    - [Hardware](#hardware)\n    - [HTML Manipulation](#html-manipulation)\n    - [HTTP Clients](#http-clients)\n    - [Image Processing](#image-processing)\n    - [Implementations](#implementations)\n    - [Interactive Interpreter](#interactive-interpreter)\n    - [Internationalization](#internationalization)\n    - [Job Scheduler](#job-scheduler)\n    - [Logging](#logging)\n    - [Machine Learning](#machine-learning)\n    - [Miscellaneous](#miscellaneous)\n    - [Natural Language Processing](#natural-language-processing)\n    - [Network Virtualization](#network-virtualization)\n    - [News Feed](#news-feed)\n    - [ORM](#orm)\n    - [Package Management](#package-management)\n    - [Package Repositories](#package-repositories)\n    - [Penetration testing](#penetration-testing)\n    - [Permissions](#permissions)\n    - [Processes](#processes)\n    - [Recommender Systems](#recommender-systems)\n    - [Refactoring](#refactoring)\n    - [RESTful API](#restful-api)\n    - [Robotics](#robotics)\n    - [RPC Servers](#rpc-servers)\n    - [Science](#science)\n    - [Search](#search)\n    - [Serialization](#serialization)\n    - [Serverless Frameworks](#serverless-frameworks)\n    - [Shell](#shell)\n    - [Specific Formats Processing](#specific-formats-processing)\n    - [Static Site Generator](#static-site-generator)\n    - [Tagging](#tagging)\n    - [Task Queues](#task-queues)\n    - [Template Engine](#template-engine)\n    - [Testing](#testing)\n    - [Text Processing](#text-processing)\n    - [Third-party APIs](#third-party-apis)\n    - [URL Manipulation](#url-manipulation)\n    - [Video](#video)\n    - [Web Asset Management](#web-asset-management)\n    - [Web Content Extracting](#web-content-extracting)\n    - [Web Crawling](#web-crawling)\n    - [Web Frameworks](#web-frameworks)\n    - [WebSocket](#websocket)\n    - [WSGI Servers](#wsgi-servers)\n- [Resources](#resources)\n    - [Newsletters](#newsletters)\n    - [Podcasts](#podcasts)\n- [Contributing](#contributing)\n\n---\n\n## Admin Panels\n\n*Libraries for administrative interfaces.*\n\n* [ajenti](https://github.com/ajenti/ajenti) - The admin panel your servers deserve.\n* [django-grappelli](https://github.com/sehmaschine/django-grappelli) - A jazzy skin for the Django Admin-Interface.\n* [flask-admin](https://github.com/flask-admin/flask-admin) - Simple and extensible administrative interface framework for Flask.\n* [flower](https://github.com/mher/flower) - Real-time monitor and web admin for Celery.\n* [jet-bridge](https://github.com/jet-admin/jet-bridge) - Admin panel framework for any application with nice UI (ex Jet Django).\n* [wooey](https://github.com/wooey/wooey) - A Django app which creates automatic web UIs for Python scripts.\n* [streamlit](https://github.com/streamlit/streamlit) - A framework which lets you build dashboards, generate reports, or create chat apps in minutes.\n\n## Algorithms and Design Patterns\n\n*Python implementation of data structures, algorithms and design patterns. Also see [awesome-algorithms](https://github.com/tayllan/awesome-algorithms).*\n\n* Algorithms\n    * [algorithms](https://github.com/keon/algorithms) - Minimal examples of data structures and algorithms.\n    * [python-ds](https://github.com/prabhupant/python-ds) - A collection of data structure and algorithms for coding interviews.\n    * [sortedcontainers](https://github.com/grantjenks/python-sortedcontainers) - Fast and pure-Python implementation of sorted collections.\n    * [thealgorithms](https://github.com/TheAlgorithms/Python) - All Algorithms implemented in Python.\n* Design Patterns\n    * [pypattyrn](https://github.com/tylerlaberge/PyPattyrn) - A simple yet effective library for implementing common design patterns.\n    * [python-patterns](https://github.com/faif/python-patterns) - A collection of design patterns in Python.\n    * [transitions](https://github.com/pytransitions/transitions) - A lightweight, object-oriented finite state machine implementation.\n\n## ASGI Servers\n\n*[ASGI](https://asgi.readthedocs.io/en/latest/)-compatible web servers.*\n\n* [daphne](https://github.com/django/daphne) - A HTTP, HTTP2 and WebSocket protocol server for ASGI and ASGI-HTTP.\n* [uvicorn](https://github.com/encode/uvicorn) - A lightning-fast ASGI server implementation, using uvloop and httptools.\n* [hypercorn](https://github.com/pgjones/hypercorn) - An ASGI and WSGI Server based on Hyper libraries and inspired by Gunicorn.\n\n## Asynchronous Programming\n\n*Libraries for asynchronous, concurrent and parallel execution. Also see [awesome-asyncio](https://github.com/timofurrer/awesome-asyncio).*\n\n* [asyncio](https://docs.python.org/3/library/asyncio.html) - (Python standard library) Asynchronous I/O, event loop, coroutines and tasks.\n    - [awesome-asyncio](https://github.com/timofurrer/awesome-asyncio)\n* [concurrent.futures](https://docs.python.org/3/library/concurrent.futures.html) - (Python standard library) A high-level interface for asynchronously executing callables.\n* [multiprocessing](https://docs.python.org/3/library/multiprocessing.html) - (Python standard library) Process-based parallelism.\n* [trio](https://github.com/python-trio/trio) - A friendly library for async concurrency and I/O.\n* [twisted](https://github.com/twisted/twisted) - An event-driven networking engine.\n* [uvloop](https://github.com/MagicStack/uvloop) - Ultra fast asyncio event loop.\n* [eventlet](https://github.com/eventlet/eventlet) - Asynchronous framework with WSGI support.\n* [gevent](https://github.com/gevent/gevent) - A coroutine-based Python networking library that uses [greenlet](https://github.com/python-greenlet/greenlet).\n\n## Audio\n\n*Libraries for manipulating audio and its metadata.*\n\n* Audio\n    * [audioread](https://github.com/beetbox/audioread) - Cross-library (GStreamer + Core Audio + MAD + FFmpeg) audio decoding.\n    * [audioFlux](https://github.com/libAudioFlux/audioFlux) - A library for audio and music analysis, feature extraction.\n    * [dejavu](https://github.com/worldveil/dejavu) - Audio fingerprinting and recognition.\n    * [kapre](https://github.com/keunwoochoi/kapre) - Keras Audio Preprocessors.\n    * [librosa](https://github.com/librosa/librosa) - Python library for audio and music analysis.\n    * [matchering](https://github.com/sergree/matchering) - A library for automated reference audio mastering.\n    * [mingus](http://bspaans.github.io/python-mingus/) - An advanced music theory and notation package with MIDI file and playback support.\n    * [pyaudioanalysis](https://github.com/tyiannak/pyAudioAnalysis) - Audio feature extraction, classification, segmentation and applications.\n    * [pydub](https://github.com/jiaaro/pydub) - Manipulate audio with a simple and easy high level interface.\n    * [timeside](https://github.com/Parisson/TimeSide) - Open web audio processing framework.\n* Metadata\n    * [beets](https://github.com/beetbox/beets) - A music library manager and [MusicBrainz](https://musicbrainz.org/) tagger.\n    * [eyed3](https://github.com/nicfit/eyeD3) - A tool for working with audio files, specifically MP3 files containing ID3 metadata.\n    * [mutagen](https://github.com/quodlibet/mutagen) - A Python module to handle audio metadata.\n    * [tinytag](https://github.com/devsnd/tinytag) - A library for reading music meta data of MP3, OGG, FLAC and Wave files.\n\n## Authentication\n\n*Libraries for implementing authentications schemes.*\n\n* OAuth\n    * [authlib](https://github.com/lepture/authlib) - JavaScript Object Signing and Encryption draft implementation.\n    * [django-allauth](https://github.com/pennersr/django-allauth) - Authentication app for Django that \"just works.\"\n    * [django-oauth-toolkit](https://github.com/jazzband/django-oauth-toolkit) - OAuth 2 goodies for Django.\n    * [oauthlib](https://github.com/oauthlib/oauthlib) - A generic and thorough implementation of the OAuth request-signing logic.\n* JWT\n    * [pyjwt](https://github.com/jpadilla/pyjwt) - JSON Web Token implementation in Python.\n    * [python-jose](https://github.com/mpdavis/python-jose/) - A JOSE implementation in Python.\n\n## Build Tools\n\n*Compile software from source code.*\n\n* [bitbake](https://github.com/openembedded/bitbake) - A make-like build tool for embedded Linux.\n* [buildout](https://github.com/buildout/buildout) - A build system for creating, assembling and deploying applications from multiple parts.\n* [platformio](https://github.com/platformio/platformio-core) - A console tool to build code with different development platforms.\n* [pybuilder](https://github.com/pybuilder/pybuilder) - A continuous build tool written in pure Python.\n* [scons](https://github.com/SCons/scons) - A software construction tool.\n\n## Built-in Classes Enhancement\n\n*Libraries for enhancing Python built-in classes.*\n\n* [attrs](https://github.com/python-attrs/attrs) - Replacement for `__init__`, `__eq__`, `__repr__`, etc. boilerplate in class definitions.\n* [bidict](https://github.com/jab/bidict) - Efficient, Pythonic bidirectional map data structures and related functionality..\n* [box](https://github.com/cdgriffith/Box) - Python dictionaries with advanced dot notation access.\n* [dataclasses](https://docs.python.org/3/library/dataclasses.html) - (Python standard library) Data classes.\n* [dotteddict](https://github.com/carlosescri/DottedDict) - A library that provides a method of accessing lists and dicts with a dotted path notation.\n\n## CMS\n\n*Content Management Systems.*\n\n* [feincms](https://github.com/feincms/feincms) - One of the most advanced Content Management Systems built on Django.\n* [indico](https://github.com/indico/indico) - A feature-rich event management system, made @ [CERN](https://en.wikipedia.org/wiki/CERN).\n* [wagtail](https://github.com/wagtail/wagtail) - A Django content management system.\n\n## Caching\n\n*Libraries for caching data.*\n\n* [beaker](https://github.com/bbangert/beaker) - A WSGI middleware for sessions and caching.\n* [django-cache-machine](https://github.com/django-cache-machine/django-cache-machine) - Automatic caching and invalidation for Django models.\n* [django-cacheops](https://github.com/Suor/django-cacheops) - A slick ORM cache with automatic granular event-driven invalidation.\n* [dogpile.cache](https://github.com/sqlalchemy/dogpile.cache) - dogpile.cache is a next generation replacement for Beaker made by the same authors.\n* [hermescache](https://pypi.org/project/HermesCache/) - Python caching library with tag-based invalidation and dogpile effect prevention.\n* [pylibmc](https://github.com/lericson/pylibmc) - A Python wrapper around the [libmemcached](https://libmemcached.org/libMemcached.html) interface.\n* [python-diskcache](https://github.com/grantjenks/python-diskcache) - SQLite and file backed cache backend with faster lookups than memcached and redis.\n\n## ChatOps Tools\n\n*Libraries for chatbot development.*\n\n* [errbot](https://github.com/errbotio/errbot/) - The easiest and most popular chatbot to implement ChatOps.\n\n## Code Analysis\n\n*Tools of static analysis, linters and code quality checkers. Also see [awesome-static-analysis](https://github.com/mre/awesome-static-analysis).*\n\n* Code Analysis\n    * [code2flow](https://github.com/scottrogowski/code2flow) - Turn your Python and JavaScript code into DOT flowcharts.\n    * [prospector](https://github.com/PyCQA/prospector) - A tool to analyse Python code.\n    * [vulture](https://github.com/jendrikseipp/vulture) - A tool for finding and analysing dead Python code.\n* Code Linters\n    * [flake8](https://github.com/PyCQA/flake8) - A wrapper around `pycodestyle`, `pyflakes` and McCabe.\n        * [awesome-flake8-extensions](https://github.com/DmytroLitvinov/awesome-flake8-extensions)\n    * [pylint](https://github.com/pylint-dev/pylint) - A fully customizable source code analyzer.\n* Code Formatters\n    * [black](https://github.com/psf/black) - The uncompromising Python code formatter.\n    * [isort](https://github.com/timothycrosley/isort) - A Python utility / library to sort imports.\n    * [yapf](https://github.com/google/yapf) - Yet another Python code formatter from Google.\n* Static Type Checkers, also see [awesome-python-typing](https://github.com/typeddjango/awesome-python-typing)\n    * [mypy](https://github.com/python/mypy) - Check variable types during compile time.\n    * [pyre-check](https://github.com/facebook/pyre-check) - Performant type checking.\n    * [typeshed](https://github.com/python/typeshed) - Collection of library stubs for Python, with static types.\n* Static Type Annotations Generators\n    * [monkeytype](https://github.com/Instagram/MonkeyType) - A system for Python that generates static type annotations by collecting runtime types.\n    * [pytype](https://github.com/google/pytype) - Pytype checks and infers types for Python code - without requiring type annotations.\n\n## Command-line Interface Development\n\n*Libraries for building command-line applications.*\n\n* Command-line Application Development\n    * [cement](https://github.com/datafolklabs/cement) - CLI Application Framework for Python.\n    * [click](https://github.com/pallets/click/) - A package for creating beautiful command line interfaces in a composable way.\n    * [cliff](https://github.com/openstack/cliff) - A framework for creating command-line programs with multi-level commands.\n    * [python-fire](https://github.com/google/python-fire) - A library for creating command line interfaces from absolutely any Python object.\n    * [python-prompt-toolkit](https://github.com/prompt-toolkit/python-prompt-toolkit) - A library for building powerful interactive command lines.\n* Terminal Rendering\n    * [alive-progress](https://github.com/rsalmei/alive-progress) - A new kind of Progress Bar, with real-time throughput, eta and very cool animations.\n    * [asciimatics](https://github.com/peterbrittain/asciimatics) - A package to create full-screen text UIs (from interactive forms to ASCII animations).\n    * [bashplotlib](https://github.com/glamp/bashplotlib) - Making basic plots in the terminal.\n    * [colorama](https://github.com/tartley/colorama) - Cross-platform colored terminal text.\n    * [rich](https://github.com/Textualize/rich) - Python library for rich text and beautiful formatting in the terminal. Also provides a great `RichHandler` log handler.\n    * [tqdm](https://github.com/tqdm/tqdm) - Fast, extensible progress bar for loops and CLI.\n\n## Command-line Tools\n\n*Useful CLI-based tools for productivity.*\n\n* Productivity Tools\n    * [copier](https://github.com/copier-org/copier) - A library and command-line utility for rendering projects templates.\n    * [cookiecutter](https://github.com/cookiecutter/cookiecutter) - A command-line utility that creates projects from cookiecutters (project templates).\n    * [doitlive](https://github.com/sloria/doitlive) - A tool for live presentations in the terminal.\n    * [howdoi](https://github.com/gleitz/howdoi) - Instant coding answers via the command line.\n    * [invoke](https://github.com/pyinvoke/invoke) - A tool for managing shell-oriented subprocesses and organizing executable Python code into CLI-invokable tasks.\n    * [pathpicker](https://github.com/facebook/PathPicker) - Select files out of bash output.\n    * [thefuck](https://github.com/nvbn/thefuck) - Correcting your previous console command.\n    * [tmuxp](https://github.com/tmux-python/tmuxp) - A [tmux](https://github.com/tmux/tmux) session manager.\n    * [try](https://github.com/timofurrer/try) - A dead simple CLI to try out python packages - it's never been easier.\n* CLI Enhancements\n    * [httpie](https://github.com/httpie/cli) - A command line HTTP client, a user-friendly cURL replacement.\n    * [iredis](https://github.com/laixintao/iredis) - Redis CLI with autocompletion and syntax highlighting.\n    * [litecli](https://github.com/dbcli/litecli) - SQLite CLI with autocompletion and syntax highlighting.\n    * [mycli](https://github.com/dbcli/mycli) - MySQL CLI with autocompletion and syntax highlighting.\n    * [pgcli](https://github.com/dbcli/pgcli) - PostgreSQL CLI with autocompletion and syntax highlighting.\n\n## Computer Vision\n\n*Libraries for Computer Vision.*\n\n* [easyocr](https://github.com/JaidedAI/EasyOCR) - Ready-to-use OCR with 40+ languages supported.\n* [kornia](https://github.com/kornia/kornia/) - Open Source Differentiable Computer Vision Library for PyTorch.\n* [opencv](https://opencv.org/) - Open Source Computer Vision Library.\n* [pytesseract](https://github.com/madmaze/pytesseract) - A wrapper for [Google Tesseract OCR](https://github.com/tesseract-ocr).\n* [tesserocr](https://github.com/sirfz/tesserocr) - Another simple, Pillow-friendly, wrapper around the `tesseract-ocr` API for OCR.\n\n## Configuration Files\n\n*Libraries for storing and parsing configuration options.*\n\n* [configparser](https://docs.python.org/3/library/configparser.html) - (Python standard library) INI file parser.\n* [configobj](https://github.com/DiffSK/configobj) - INI file parser with validation.\n* [hydra](https://github.com/facebookresearch/hydra) - Hydra is a framework for elegantly configuring complex applications.\n* [python-decouple](https://github.com/HBNetwork/python-decouple) - Strict separation of settings from code.\n\n## Cryptography\n\n* [cryptography](https://github.com/pyca/cryptography) - A package designed to expose cryptographic primitives and recipes to Python developers.\n* [paramiko](https://github.com/paramiko/paramiko) - The leading native Python SSHv2 protocol library.\n* [pynacl](https://github.com/pyca/pynacl) - Python binding to the Networking and Cryptography (NaCl) library.\n\n## Data Analysis\n\n*Libraries for data analyzing.*\n\n* [pandas](http://pandas.pydata.org/) - A library providing high-performance, easy-to-use data structures and data analysis tools.\n* [aws-sdk-pandas](https://github.com/aws/aws-sdk-pandas) - Pandas on AWS.\n* [datasette](https://github.com/simonw/datasette) - An open source multi-tool for exploring and publishing data.\n* [optimus](https://github.com/hi-primus/optimus) - Agile Data Science Workflows made easy with PySpark.\n\n## Data Validation\n\n*Libraries for validating data. Used for forms in many cases.*\n\n* [cerberus](https://github.com/pyeve/cerberus) - A lightweight and extensible data validation library.\n* [colander](https://github.com/Pylons/colander) - Validating and deserializing data obtained via XML, JSON, an HTML form post.\n* [jsonschema](https://github.com/python-jsonschema/jsonschema) - An implementation of [JSON Schema](http://json-schema.org/) for Python.\n* [schema](https://github.com/keleshev/schema) - A library for validating Python data structures.\n* [schematics](https://github.com/schematics/schematics) - Data Structure Validation.\n* [voluptuous](https://github.com/alecthomas/voluptuous) - A Python data validation library.\n* [pydantic](https://github.com/pydantic/pydantic) - Data validation using Python type hints.\n\n## Data Visualization\n\n*Libraries for visualizing data. Also see [awesome-javascript](https://github.com/sorrycc/awesome-javascript#data-visualization).*\n\n* [altair](https://github.com/altair-viz/altair) - Declarative statistical visualization library for Python.\n* [bokeh](https://github.com/bokeh/bokeh) - Interactive Web Plotting for Python.\n* [bqplot](https://github.com/bloomberg/bqplot) - Interactive Plotting Library for the Jupyter Notebook.\n* [cartopy](https://github.com/SciTools/cartopy) - A cartographic python library with matplotlib support.\n* [diagrams](https://github.com/mingrammer/diagrams) - Diagram as Code.\n* [matplotlib](https://github.com/matplotlib/matplotlib) - A Python 2D plotting library.\n* [plotnine](https://github.com/has2k1/plotnine) - A grammar of graphics for Python based on ggplot2.\n* [pygal](https://github.com/Kozea/pygal) - A Python SVG Charts Creator.\n* [pygraphviz](https://github.com/pygraphviz/pygraphviz/) - Python interface to [Graphviz](http://www.graphviz.org/).\n* [pyqtgraph](https://github.com/pyqtgraph/pyqtgraph) - Interactive and realtime 2D/3D/Image plotting and science/engineering widgets.\n* [seaborn](https://github.com/mwaskom/seaborn) - Statistical data visualization using Matplotlib.\n* [vispy](https://github.com/vispy/vispy) - High-performance scientific visualization based on OpenGL.\n\n## Database\n\n*Databases implemented in Python.*\n\n* [pickleDB](https://github.com/patx/pickledb) - A simple and lightweight key-value store for Python.\n* [tinydb](https://github.com/msiemens/tinydb) - A tiny, document-oriented database.\n* [zodb](https://github.com/zopefoundation/ZODB) - A native object database for Python. A key-value and object graph database.\n\n## Database Drivers\n\n*Libraries for connecting and operating databases.*\n\n* MySQL - [awesome-mysql](http://shlomi-noach.github.io/awesome-mysql/)\n    * [mysqlclient](https://github.com/PyMySQL/mysqlclient) - MySQL connector with Python 3 support ([mysql-python](https://sourceforge.net/projects/mysql-python/) fork).\n    * [pymysql](https://github.com/PyMySQL/PyMySQL) - A pure Python MySQL driver compatible to mysql-python.\n* PostgreSQL - [awesome-postgres](https://github.com/dhamaniasad/awesome-postgres)\n    * [psycopg](https://github.com/psycopg/psycopg) - The most popular PostgreSQL adapter for Python.\n* SQlite - [awesome-sqlite](https://github.com/planetopendata/awesome-sqlite)\n    * [sqlite3](https://docs.python.org/3/library/sqlite3.html) - (Python standard library) SQlite interface compliant with DB-API 2.0.\n    * [sqlite-utils](https://github.com/simonw/sqlite-utils) - Python CLI utility and library for manipulating SQLite databases.\n* Other Relational Databases\n    * [pymssql](https://github.com/pymssql/pymssql) - A simple database interface to Microsoft SQL Server.\n    * [clickhouse-driver](https://github.com/mymarilyn/clickhouse-driver) - Python driver with native interface for ClickHouse.\n* NoSQL Databases\n    * [cassandra-driver](https://github.com/datastax/python-driver) - The Python Driver for Apache Cassandra.\n    * [happybase](https://github.com/python-happybase/happybase) - A developer-friendly library for Apache HBase.\n    * [kafka-python](https://github.com/dpkp/kafka-python) - The Python client for Apache Kafka.\n    * [pymongo](https://github.com/mongodb/mongo-python-driver) - The official Python client for MongoDB.\n    * [motor](https://github.com/mongodb/motor) - The async Python driver for MongoDB.\n    * [redis-py](https://github.com/redis/redis-py) - The Python client for Redis.\n\n## Date and Time\n\n*Libraries for working with dates and times.*\n\n* [arrow](https://github.com/arrow-py/arrow) - A Python library that offers a sensible and human-friendly approach to creating, manipulating, formatting and converting dates, times and timestamps.\n* [dateutil](https://github.com/dateutil/dateutil) - Extensions to the standard Python [datetime](https://docs.python.org/3/library/datetime.html) module.\n* [pendulum](https://github.com/sdispater/pendulum) - Python datetimes made easy.\n* [pytz](https://pypi.org/project/pytz/) - World timezone definitions, modern and historical. Brings the [tz database](https://en.wikipedia.org/wiki/Tz_database) into Python.\n\n## Debugging Tools\n\n*Libraries for debugging code.*\n\n* pdb-like Debugger\n    * [ipdb](https://github.com/gotcha/ipdb) - IPython-enabled [pdb](https://docs.python.org/3/library/pdb.html).\n    * [pudb](https://github.com/inducer/pudb) - A full-screen, console-based Python debugger.\n* Tracing\n    * [manhole](https://github.com/ionelmc/python-manhole) - Debugging UNIX socket connections and present the stacktraces for all threads and an interactive prompt.\n    * [python-hunter](https://github.com/ionelmc/python-hunter) - A flexible code tracing toolkit.\n* Profiler\n    * [py-spy](https://github.com/benfred/py-spy) - A sampling profiler for Python programs. Written in Rust.\n    * [vprof](https://github.com/nvdv/vprof) - Visual Python profiler.\n* Others\n    * [django-debug-toolbar](https://github.com/jazzband/django-debug-toolbar) - Display various debug information for Django.\n    * [flask-debugtoolbar](https://github.com/pallets-eco/flask-debugtoolbar) - A port of the django-debug-toolbar to flask.\n    * [icecream](https://github.com/gruns/icecream) - Inspect variables, expressions, and program execution with a single, simple function call.\n    * [pyelftools](https://github.com/eliben/pyelftools) - Parsing and analyzing ELF files and DWARF debugging information.\n\n## Deep Learning\n\n*Frameworks for Neural Networks and Deep Learning. Also see [awesome-deep-learning](https://github.com/ChristosChristofidis/awesome-deep-learning).*\n\n* [keras](https://github.com/keras-team/keras) - A high-level neural networks library and capable of running on top of either TensorFlow or Theano.\n* [pytorch](https://github.com/pytorch/pytorch) - Tensors and Dynamic neural networks in Python with strong GPU acceleration.\n* [pytorch-lightning](https://github.com/Lightning-AI/pytorch-lightning) - Deep learning framework to train, deploy, and ship AI products Lightning fast.\n* [stable-baselines3](https://github.com/DLR-RM/stable-baselines3) - PyTorch implementations of Stable Baselines (deep) reinforcement learning algorithms.\n* [tensorflow](https://github.com/tensorflow/tensorflow) - The most popular Deep Learning framework created by Google.\n* [theano](https://github.com/Theano/Theano) - A library for fast numerical computation.\n\n## DevOps Tools\n\n*Software and libraries for DevOps.*\n\n* Configuration Management\n    * [ansible](https://github.com/ansible/ansible) - A radically simple IT automation platform.\n    * [cloudinit](https://github.com/canonical/cloud-init) - A multi-distribution package that handles early initialization of a cloud instance.\n    * [openstack](https://www.openstack.org/) - Open source software for building private and public clouds.\n    * [pyinfra](https://github.com/pyinfra-dev/pyinfra) - A versatile CLI tools and python libraries to automate infrastructure.\n    * [saltstack](https://github.com/saltstack/salt) - Infrastructure automation and management system.\n* SSH-style Deployment\n    * [cuisine](https://github.com/sebastien/cuisine) - Chef-like functionality for Fabric.\n    * [fabric](https://github.com/fabric/fabric) - A simple, Pythonic tool for remote execution and deployment.\n* Process Management\n    * [supervisor](https://github.com/Supervisor/supervisor) - Supervisor process control system for UNIX.\n* Monitoring\n    * [psutil](https://github.com/giampaolo/psutil) - A cross-platform process and system utilities module.\n* Backup\n    * [borg](https://github.com/borgbackup/borg) - A deduplicating archiver with compression and encryption.\n\n## Distributed Computing\n\n*Frameworks and libraries for Distributed Computing.*\n\n* Batch Processing\n    * [dask](https://github.com/dask/dask) - A flexible parallel computing library for analytic computing.\n    * [luigi](https://github.com/spotify/luigi) - A module that helps you build complex pipelines of batch jobs.\n    * [PySpark](https://github.com/apache/spark) - [Apache Spark](https://spark.apache.org/) Python API.\n    * [Ray](https://github.com/ray-project/ray/) - A system for parallel and distributed Python that unifies the machine learning ecosystem.\n* Stream Processing\n    * [faust](https://github.com/robinhood/faust) - A stream processing library, porting the ideas from [Kafka Streams](https://kafka.apache.org/documentation/streams/) to Python.\n    * [streamparse](https://github.com/Parsely/streamparse) - Run Python code against real-time streams of data via [Apache Storm](http://storm.apache.org/).\n\n## Distribution\n\n*Libraries to create packaged executables for release distribution.*\n\n* [py2app](https://github.com/ronaldoussoren/py2app) - Freezes Python scripts (Mac OS X).\n* [py2exe](https://github.com/py2exe/py2exe) - Freezes Python scripts (Windows).\n* [pyarmor](https://github.com/dashingsoft/pyarmor) - A tool used to obfuscate python scripts, bind obfuscated scripts to fixed machine or expire obfuscated scripts.\n* [pyinstaller](https://github.com/pyinstaller/pyinstaller) - Converts Python programs into stand-alone executables (cross-platform).\n* [shiv](https://github.com/linkedin/shiv) - A command line utility for building fully self-contained zipapps (PEP 441), but with all their dependencies included.\n\n## Documentation\n\n*Libraries for generating project documentation.*\n\n* [sphinx](https://github.com/sphinx-doc/sphinx/) - Python Documentation generator.\n    * [awesome-sphinxdoc](https://github.com/yoloseem/awesome-sphinxdoc)\n* [pdoc](https://github.com/mitmproxy/pdoc) - Epydoc replacement to auto generate API documentation for Python libraries.\n\n## Downloader\n\n*Libraries for downloading.*\n\n* [akshare](https://github.com/jindaxiang/akshare) - A financial data interface library, built for human beings!\n* [s3cmd](https://github.com/s3tools/s3cmd) - A command line tool for managing Amazon S3 and CloudFront.\n* [youtube-dl](https://github.com/ytdl-org/youtube-dl/) - A command-line program to download videos from YouTube and other video sites.\n\n## Editor Plugins and IDEs\n\n* Emacs\n    * [elpy](https://github.com/jorgenschaefer/elpy) - Emacs Python Development Environment.\n* Vim\n    * [jedi-vim](https://github.com/davidhalter/jedi-vim) - Vim bindings for the Jedi auto-completion library for Python.\n    * [python-mode](https://github.com/python-mode/python-mode) - An all in one plugin for turning Vim into a Python IDE.\n    * [YouCompleteMe](https://github.com/Valloric/YouCompleteMe) - Includes [Jedi](https://github.com/davidhalter/jedi)-based completion engine for Python.\n* Visual Studio\n    * [PTVS](https://github.com/Microsoft/PTVS) - Python Tools for Visual Studio.\n* Visual Studio Code\n    * [Python](https://marketplace.visualstudio.com/items?itemName=ms-python.python) - The official VSCode extension with rich support for Python.\n* IDE\n    * [PyCharm](https://www.jetbrains.com/pycharm/) - Commercial Python IDE by JetBrains. Has free community edition available.\n    * [spyder](https://github.com/spyder-ide/spyder) - Open Source Python IDE.\n\n## Email\n\n*Libraries for sending and parsing email.*\n\n* Mail Servers\n    * [modoboa](https://github.com/modoboa/modoboa) - A mail hosting and management platform including a modern Web UI.\n    * [salmon](https://github.com/moggers87/salmon) - A Python Mail Server.\n* Clients\n    * [imbox](https://github.com/martinrusev/imbox) - Python IMAP for Humans.\n    * [yagmail](https://github.com/kootenpv/yagmail) - Yet another Gmail/SMTP client.\n* Others\n    * [flanker](https://github.com/mailgun/flanker) - An email address and Mime parsing library.\n    * [mailer](https://github.com/marrow/mailer) - High-performance extensible mail delivery framework.\n\n## Environment Management\n\n*Libraries for Python version and virtual environment management.*\n\n* [pyenv](https://github.com/pyenv/pyenv) - Simple Python version management.\n* [virtualenv](https://github.com/pypa/virtualenv) - A tool to create isolated Python environments.\n\n## File Manipulation\n\n*Libraries for file manipulation.*\n\n* [mimetypes](https://docs.python.org/3/library/mimetypes.html) - (Python standard library) Map filenames to MIME types.\n* [pathlib](https://docs.python.org/3/library/pathlib.html) - (Python standard library) An cross-platform, object-oriented path library.\n* [path.py](https://github.com/jaraco/path.py) - A module wrapper for [os.path](https://docs.python.org/3/library/os.path.html).\n* [python-magic](https://github.com/ahupp/python-magic) - A Python interface to the libmagic file type identification library.\n* [watchdog](https://github.com/gorakhargosh/watchdog) - API and shell utilities to monitor file system events.\n\n## Functional Programming\n\n*Functional Programming with Python.*\n\n* [coconut](https://github.com/evhub/coconut) - A variant of Python built for simple, elegant, Pythonic functional programming.\n* [funcy](https://github.com/Suor/funcy) - A fancy and practical functional tools.\n* [more-itertools](https://github.com/erikrose/more-itertools) - More routines for operating on iterables, beyond `itertools`.\n* [returns](https://github.com/dry-python/returns) - A set of type-safe monads, transformers, and composition utilities.\n* [cytoolz](https://github.com/pytoolz/cytoolz/) - Cython implementation of `Toolz`: High performance functional utilities.\n* [toolz](https://github.com/pytoolz/toolz) - A collection of functional utilities for iterators, functions, and dictionaries.\n\n## GUI Development\n\n*Libraries for working with graphical user interface applications.*\n\n* [curses](https://docs.python.org/3/library/curses.html) - Built-in wrapper for [ncurses](http://www.gnu.org/software/ncurses/) used to create terminal GUI applications.\n* [Eel](https://github.com/ChrisKnott/Eel) - A library for making simple Electron-like offline HTML/JS GUI apps.\n* [enaml](https://github.com/nucleic/enaml) - Creating beautiful user-interfaces with Declarative Syntax like QML.\n* [Flexx](https://github.com/zoofIO/flexx) - Flexx is a pure Python toolkit for creating GUI's, that uses web technology for its rendering.\n* [Gooey](https://github.com/chriskiehl/Gooey) - Turn command line programs into a full GUI application with one line.\n* [kivy](https://kivy.org/) - A library for creating NUI applications, running on Windows, Linux, Mac OS X, Android and iOS.\n* [pyglet](https://github.com/pyglet/pyglet) - A cross-platform windowing and multimedia library for Python.\n* [PyGObject](https://pygobject.readthedocs.io/) - Python Bindings for GLib/GObject/GIO/GTK+ (GTK+3).\n* [PyQt](https://doc.qt.io/qtforpython/) - Python bindings for the [Qt](https://www.qt.io/) cross-platform application and UI framework.\n* [PySimpleGUI](https://github.com/PySimpleGUI/PySimpleGUI) - Wrapper for tkinter, Qt, WxPython and Remi.\n* [pywebview](https://github.com/r0x0r/pywebview/) - A lightweight cross-platform native wrapper around a webview component.\n* [Tkinter](https://wiki.python.org/moin/TkInter) - Tkinter is Python's de-facto standard GUI package.\n* [Toga](https://github.com/pybee/toga) - A Python native, OS native GUI toolkit.\n* [urwid](http://urwid.org/) - A library for creating terminal GUI applications with strong support for widgets, events, rich colors, etc.\n* [wxPython](https://wxpython.org/) - A blending of the wxWidgets C++ class library with the Python.\n* [DearPyGui](https://github.com/RaylockLLC/DearPyGui/) - A Simple GPU accelerated Python GUI framework\n\n## GraphQL\n\n*Libraries for working with GraphQL.*\n\n* [graphene](https://github.com/graphql-python/graphene/) - GraphQL framework for Python.\n\n## Game Development\n\n*Awesome game development libraries.*\n\n* [Arcade](https://api.arcade.academy/en/latest/) - Arcade is a modern Python framework for crafting games with compelling graphics and sound.\n* [Cocos2d](https://www.cocos.com/en/cocos2d-x) - cocos2d is a framework for building 2D games, demos, and other graphical/interactive applications.\n* [Harfang3D](http://www.harfang3d.com) - Python framework for 3D, VR and game development.\n* [Panda3D](https://www.panda3d.org/) - 3D game engine developed by Disney.\n* [Pygame](http://www.pygame.org/news.html) - Pygame is a set of Python modules designed for writing games.\n* [PyOgre](http://www.ogre3d.org/tikiwiki/PyOgre) - Python bindings for the Ogre 3D render engine, can be used for games, simulations, anything 3D.\n* [PyOpenGL](http://pyopengl.sourceforge.net/) - Python ctypes bindings for OpenGL and it's related APIs.\n* [PySDL2](https://pysdl2.readthedocs.io) - A ctypes based wrapper for the SDL2 library.\n* [RenPy](https://www.renpy.org/) - A Visual Novel engine.\n\n## Geolocation\n\n*Libraries for geocoding addresses and working with latitudes and longitudes.*\n\n* [django-countries](https://github.com/SmileyChris/django-countries) - A Django app that provides a country field for models and forms.\n* [geodjango](https://docs.djangoproject.com/en/dev/ref/contrib/gis/) - A world-class geographic web framework.\n* [geojson](https://github.com/jazzband/geojson) - Python bindings and utilities for GeoJSON.\n* [geopy](https://github.com/geopy/geopy) - Python Geocoding Toolbox.\n\n## HTML Manipulation\n\n*Libraries for working with HTML and XML.*\n\n* [beautifulsoup](https://www.crummy.com/software/BeautifulSoup/bs4/doc/) - Providing Pythonic idioms for iterating, searching, and modifying HTML or XML.\n* [bleach](https://github.com/mozilla/bleach) - A whitelist-based HTML sanitization and text linkification library.\n* [cssutils](https://pypi.org/project/cssutils/) - A CSS library for Python.\n* [html5lib](https://github.com/html5lib/html5lib-python) - A standards-compliant library for parsing and serializing HTML documents and fragments.\n* [lxml](http://lxml.de/) - A very fast, easy-to-use and versatile library for handling HTML and XML.\n* [markupsafe](https://github.com/pallets/markupsafe) - Implements a XML/HTML/XHTML Markup safe string for Python.\n* [pyquery](https://github.com/gawel/pyquery) - A jQuery-like library for parsing HTML.\n* [untangle](https://github.com/stchris/untangle) - Converts XML documents to Python objects for easy access.\n* [WeasyPrint](http://weasyprint.org) - A visual rendering engine for HTML and CSS that can export to PDF.\n* [xmldataset](https://xmldataset.readthedocs.io/en/latest/) - Simple XML Parsing.\n* [xmltodict](https://github.com/martinblech/xmltodict) - Working with XML feel like you are working with JSON.\n\n## HTTP Clients\n\n*Libraries for working with HTTP.*\n\n* [httpx](https://github.com/encode/httpx) - A next generation HTTP client for Python.\n* [requests](https://github.com/psf/requests) - HTTP Requests for Humans.\n* [treq](https://github.com/twisted/treq) - Python requests like API built on top of Twisted's HTTP client.\n* [urllib3](https://github.com/urllib3/urllib3) - A HTTP library with thread-safe connection pooling, file post support, sanity friendly.\n\n## Hardware\n\n*Libraries for programming with hardware.*\n\n* [keyboard](https://github.com/boppreh/keyboard) - Hook and simulate global keyboard events on Windows and Linux.\n* [mouse](https://github.com/boppreh/mouse) - Hook and simulate global mouse events on Windows and Linux.\n* [pynput](https://github.com/moses-palmer/pynput) - A library to control and monitor input devices.\n* [scapy](https://github.com/secdev/scapy) - A brilliant packet manipulation library.\n\n## Image Processing\n\n*Libraries for manipulating images.*\n\n* [pillow](https://github.com/python-pillow/Pillow) - Pillow is the friendly [PIL](http://www.pythonware.com/products/pil/) fork.\n* [python-barcode](https://github.com/WhyNotHugo/python-barcode) - Create barcodes in Python with no extra dependencies.\n* [pymatting](http://github.com/pymatting/pymatting) - A library for alpha matting.\n* [python-qrcode](https://github.com/lincolnloop/python-qrcode) - A pure Python QR Code generator.\n* [pywal](https://github.com/dylanaraps/pywal) - A tool that generates color schemes from images.\n* [pyvips](https://github.com/libvips/pyvips) - A fast image processing library with low memory needs.\n* [quads](https://github.com/fogleman/Quads) - Computer art based on quadtrees.\n* [scikit-image](http://scikit-image.org/) - A Python library for (scientific) image processing.\n* [thumbor](https://github.com/thumbor/thumbor) - A smart imaging service. It enables on-demand crop, re-sizing and flipping of images.\n* [wand](https://github.com/emcconville/wand) - Python bindings for [MagickWand](http://www.imagemagick.org/script/magick-wand.php), C API for ImageMagick.\n\n## Implementations\n\n*Implementations of Python.*\n\n* [cpython](https://github.com/python/cpython) - **Default, most widely used implementation of the Python programming language written in C.**\n* [cython](https://github.com/cython/cython) - Optimizing Static Compiler for Python.\n* [clpython](https://github.com/metawilm/cl-python) - Implementation of the Python programming language written in Common Lisp.\n* [ironpython](https://github.com/IronLanguages/ironpython3) - Implementation of the Python programming language written in C#.\n* [micropython](https://github.com/micropython/micropython) - A lean and efficient Python programming language implementation.\n* [numba](https://github.com/numba/numba) - Python JIT compiler to LLVM aimed at scientific Python.\n* [peachpy](https://github.com/Maratyszcza/PeachPy) - x86-64 assembler embedded in Python.\n* [pypy](https://foss.heptapod.net/pypy/pypy) - A very fast and compliant implementation of the Python language.\n* [pyston](https://github.com/pyston/pyston/) - A Python implementation using JIT techniques.\n\n## Interactive Interpreter\n\n*Interactive Python interpreters (REPL).*\n\n* [bpython](https://github.com/bpython/bpython) - A fancy interface to the Python interpreter.\n* [Jupyter Notebook (IPython)](https://jupyter.org) - A rich toolkit to help you make the most out of using Python interactively.\n    * [awesome-jupyter](https://github.com/markusschanta/awesome-jupyter)\n* [ptpython](https://github.com/jonathanslenders/ptpython) - Advanced Python REPL built on top of the [python-prompt-toolkit](https://github.com/jonathanslenders/python-prompt-toolkit).\n\n## Internationalization\n\n*Libraries for working with i18n.*\n\n* [Babel](http://babel.pocoo.org/en/latest/) - An internationalization library for Python.\n* [PyICU](https://github.com/ovalhub/pyicu) - A wrapper of International Components for Unicode C++ library ([ICU](http://site.icu-project.org/)).\n\n## Job Scheduler\n\n*Libraries for scheduling jobs.*\n\n* [Airflow](https://airflow.apache.org/) - Airflow is a platform to programmatically author, schedule and monitor workflows.\n* [APScheduler](http://apscheduler.readthedocs.io/en/latest/) - A light but powerful in-process task scheduler that lets you schedule functions.\n* [django-schedule](https://github.com/thauber/django-schedule) - A calendaring app for Django.\n* [doit](http://pydoit.org/) - A task runner and build tool.\n* [gunnery](https://github.com/gunnery/gunnery) - Multipurpose task execution tool for distributed systems with web-based interface.\n* [Joblib](https://joblib.readthedocs.io/) - A set of tools to provide lightweight pipelining in Python.\n* [Plan](https://github.com/fengsp/plan) - Writing crontab file in Python like a charm.\n* [Prefect](https://github.com/PrefectHQ/prefect) - A modern workflow orchestration framework that makes it easy to build, schedule and monitor robust data pipelines.\n* [schedule](https://github.com/dbader/schedule) - Python job scheduling for humans.\n* [Spiff](https://github.com/knipknap/SpiffWorkflow) - A powerful workflow engine implemented in pure Python.\n* [TaskFlow](https://docs.openstack.org/developer/taskflow/) - A Python library that helps to make task execution easy, consistent and reliable.\n\n## Logging\n\n*Libraries for generating and working with logs.*\n\n* [logbook](http://logbook.readthedocs.io/en/stable/) - Logging replacement for Python.\n* [logging](https://docs.python.org/3/library/logging.html) - (Python standard library) Logging facility for Python.\n* [loguru](https://github.com/Delgan/loguru) - Library which aims to bring enjoyable logging in Python.\n* [sentry-python](https://github.com/getsentry/sentry-python) - Sentry SDK for Python.\n* [structlog](https://www.structlog.org/en/stable/) - Structured logging made easy.\n\n## Machine Learning\n\n*Libraries for Machine Learning. Also see [awesome-machine-learning](https://github.com/josephmisiti/awesome-machine-learning#python).*\n\n* [gym](https://github.com/openai/gym) - A toolkit for developing and comparing reinforcement learning algorithms.\n* [H2O](https://github.com/h2oai/h2o-3) - Open Source Fast Scalable Machine Learning Platform.\n* [Metrics](https://github.com/benhamner/Metrics) - Machine learning evaluation metrics.\n* [NuPIC](https://github.com/numenta/nupic) - Numenta Platform for Intelligent Computing.\n* [scikit-learn](http://scikit-learn.org/) - The most popular Python library for Machine Learning.\n* [Spark ML](http://spark.apache.org/docs/latest/ml-guide.html) - [Apache Spark](http://spark.apache.org/)'s scalable Machine Learning library.\n* [vowpal_porpoise](https://github.com/josephreisinger/vowpal_porpoise) - A lightweight Python wrapper for [Vowpal Wabbit](https://github.com/JohnLangford/vowpal_wabbit/).\n* [xgboost](https://github.com/dmlc/xgboost) - A scalable, portable, and distributed gradient boosting library.\n* [MindsDB](https://github.com/mindsdb/mindsdb) - MindsDB is an open source AI layer for existing databases that allows you to effortlessly develop, train and deploy state-of-the-art machine learning models using standard queries.\n\n## Microsoft Windows\n\n*Python programming on Microsoft Windows.*\n\n* [Python(x,y)](http://python-xy.github.io/) - Scientific-applications-oriented Python Distribution based on Qt and Spyder.\n* [pythonlibs](http://www.lfd.uci.edu/~gohlke/pythonlibs/) - Unofficial Windows binaries for Python extension packages.\n* [PythonNet](https://github.com/pythonnet/pythonnet) - Python Integration with the .NET Common Language Runtime (CLR).\n* [PyWin32](https://github.com/mhammond/pywin32) - Python Extensions for Windows.\n* [WinPython](https://winpython.github.io/) - Portable development environment for Windows 7/8.\n\n## Miscellaneous\n\n*Useful libraries or tools that don't fit in the categories above.*\n\n* [blinker](https://github.com/jek/blinker) - A fast Python in-process signal/event dispatching system.\n* [boltons](https://github.com/mahmoud/boltons) - A set of pure-Python utilities.\n* [itsdangerous](https://github.com/pallets/itsdangerous) - Various helpers to pass trusted data to untrusted environments.\n* [magenta](https://github.com/magenta/magenta) - A tool to generate music and art using artificial intelligence.\n* [pluginbase](https://github.com/mitsuhiko/pluginbase) - A simple but flexible plugin system for Python.\n* [tryton](http://www.tryton.org/) - A general purpose business framework.\n\n## Natural Language Processing\n\n*Libraries for working with human languages.*\n\n- General\n    * [gensim](https://github.com/RaRe-Technologies/gensim) - Topic Modeling for Humans.\n    * [langid.py](https://github.com/saffsd/langid.py) - Stand-alone language identification system.\n    * [nltk](http://www.nltk.org/) - A leading platform for building Python programs to work with human language data.\n    * [pattern](https://github.com/clips/pattern) - A web mining module.\n    * [polyglot](https://github.com/aboSamoor/polyglot) - Natural language pipeline supporting hundreds of languages.\n    * [pytext](https://github.com/facebookresearch/pytext) - A natural language modeling framework based on PyTorch.\n    * [PyTorch-NLP](https://github.com/PetrochukM/PyTorch-NLP) - A toolkit enabling rapid deep learning NLP prototyping for research.\n    * [spacy](https://spacy.io/) - A library for industrial-strength natural language processing in Python and Cython.\n    * [Stanza](https://github.com/stanfordnlp/stanza) - The Stanford NLP Group's official Python library, supporting 60+ languages.\n- Chinese\n    * [funNLP](https://github.com/fighting41love/funNLP) - A collection of tools and datasets for Chinese NLP.\n    * [jieba](https://github.com/fxsjy/jieba) - The most popular Chinese text segmentation library.\n    * [pkuseg-python](https://github.com/lancopku/pkuseg-python) - A toolkit for Chinese word segmentation in various domains.\n    * [snownlp](https://github.com/isnowfy/snownlp) - A library for processing Chinese text.\n\n## Network Virtualization\n\n*Tools and libraries for Virtual Networking and SDN (Software Defined Networking).*\n\n* [mininet](https://github.com/mininet/mininet) - A popular network emulator and API written in Python.\n* [napalm](https://github.com/napalm-automation/napalm) - Cross-vendor API to manipulate network devices.\n* [pox](https://github.com/noxrepo/pox) - A Python-based SDN control applications, such as OpenFlow SDN controllers.\n\n## News Feed\n\n*Libraries for building user's activities.*\n\n* [django-activity-stream](https://github.com/justquick/django-activity-stream) - Generating generic activity streams from the actions on your site.\n* [Stream Framework](https://github.com/tschellenbach/Stream-Framework) - Building news feed and notification systems using Cassandra and Redis.\n\n## ORM\n\n*Libraries that implement Object-Relational Mapping or data mapping techniques.*\n\n* Relational Databases\n    * [Django Models](https://docs.djangoproject.com/en/dev/topics/db/models/) - The Django ORM.\n    * [SQLAlchemy](https://www.sqlalchemy.org/) - The Python SQL Toolkit and Object Relational Mapper.\n        * [awesome-sqlalchemy](https://github.com/dahlia/awesome-sqlalchemy)\n    * [dataset](https://github.com/pudo/dataset) - Store Python dicts in a database - works with SQLite, MySQL, and PostgreSQL.\n    * [orator](https://github.com/sdispater/orator) -  The Orator ORM provides a simple yet beautiful ActiveRecord implementation.\n    * [orm](https://github.com/encode/orm) - An async ORM.\n    * [peewee](https://github.com/coleifer/peewee) - A small, expressive ORM.\n    * [pony](https://github.com/ponyorm/pony/) - ORM that provides a generator-oriented interface to SQL.\n    * [pydal](https://github.com/web2py/pydal/) - A pure Python Database Abstraction Layer.\n* NoSQL Databases\n    * [hot-redis](https://github.com/stephenmcd/hot-redis) - Rich Python data types for Redis.\n    * [mongoengine](https://github.com/MongoEngine/mongoengine) - A Python Object-Document-Mapper for working with MongoDB.\n    * [PynamoDB](https://github.com/pynamodb/PynamoDB) - A Pythonic interface for [Amazon DynamoDB](https://aws.amazon.com/dynamodb/).\n    * [redisco](https://github.com/kiddouk/redisco) - A Python Library for Simple Models and Containers Persisted in Redis.\n\n## Package Management\n\n*Libraries for package and dependency management.*\n\n* [pip](https://pip.pypa.io/en/stable/) - The package installer for Python.\n    * [pip-tools](https://github.com/jazzband/pip-tools) - A set of tools to keep your pinned Python dependencies fresh.\n    * [PyPI](https://pypi.org/)\n* [conda](https://github.com/conda/conda/) - Cross-platform, Python-agnostic binary package manager.\n* [poetry](https://github.com/sdispater/poetry) - Python dependency management and packaging made easy.\n\n## Package Repositories\n\n*Local PyPI repository server and proxies.*\n\n* [bandersnatch](https://github.com/pypa/bandersnatch/) - PyPI mirroring tool provided by Python Packaging Authority (PyPA).\n* [devpi](https://github.com/devpi/devpi) - PyPI server and packaging/testing/release tool.\n* [localshop](https://github.com/jazzband/localshop) - Local PyPI server (custom packages and auto-mirroring of pypi).\n* [warehouse](https://github.com/pypa/warehouse) - Next generation Python Package Repository (PyPI).\n\n## Penetration Testing\n\n*Frameworks and tools for penetration testing.*\n\n* [fsociety](https://github.com/Manisso/fsociety) - A Penetration testing framework.\n* [setoolkit](https://github.com/trustedsec/social-engineer-toolkit) - A toolkit for social engineering.\n* [sqlmap](https://github.com/sqlmapproject/sqlmap) - Automatic SQL injection and database takeover tool.\n\n## Permissions\n\n*Libraries that allow or deny users access to data or functionality.*\n\n* [django-guardian](https://github.com/django-guardian/django-guardian) - Implementation of per object permissions for Django 1.2+\n* [django-rules](https://github.com/dfunckt/django-rules) - A tiny but powerful app providing object-level permissions to Django, without requiring a database.\n\n## Processes\n\n*Libraries for starting and communicating with OS processes.*\n\n* [delegator.py](https://github.com/amitt001/delegator.py) - [Subprocesses](https://docs.python.org/3/library/subprocess.html) for Humans 2.0.\n* [sarge](https://sarge.readthedocs.io/en/latest/) - Yet another wrapper for subprocess.\n* [sh](https://github.com/amoffat/sh) - A full-fledged subprocess replacement for Python.\n\n## Recommender Systems\n\n*Libraries for building recommender systems.*\n\n* [annoy](https://github.com/spotify/annoy) - Approximate Nearest Neighbors in C++/Python optimized for memory usage.\n* [fastFM](https://github.com/ibayer/fastFM) - A library for Factorization Machines.\n* [implicit](https://github.com/benfred/implicit) - A fast Python implementation of collaborative filtering for implicit datasets.\n* [libffm](https://github.com/guestwalk/libffm) - A library for Field-aware Factorization Machine (FFM).\n* [lightfm](https://github.com/lyst/lightfm) - A Python implementation of a number of popular recommendation algorithms.\n* [spotlight](https://github.com/maciejkula/spotlight) - Deep recommender models using PyTorch.\n* [Surprise](https://github.com/NicolasHug/Surprise) - A scikit for building and analyzing recommender systems.\n* [tensorrec](https://github.com/jfkirk/tensorrec) - A Recommendation Engine Framework in TensorFlow.\n\n## Refactoring\n\n*Refactoring tools and libraries for Python*\n\n * [Bicycle Repair Man](http://bicyclerepair.sourceforge.net/) - Bicycle Repair Man, a refactoring tool for Python.\n * [Bowler](https://pybowler.io/) - Safe code refactoring for modern Python.\n * [Rope](https://github.com/python-rope/rope) -  Rope is a python refactoring library.\n\n## RESTful API\n\n*Libraries for building RESTful APIs.*\n\n* Django\n    * [django-rest-framework](https://github.com/encode/django-rest-framework) - A powerful and flexible toolkit to build web APIs.\n    * [django-tastypie](https://github.com/django-tastypie/django-tastypie) - Creating delicious APIs for Django apps.\n* Flask\n    * [eve](https://github.com/pyeve/eve) - REST API framework powered by Flask, MongoDB and good intentions.\n    * [flask-api](https://github.com/flask-api/flask-api) - Browsable Web APIs for Flask.\n    * [flask-restful](https://github.com/flask-restful/flask-restful) - Quickly building REST APIs for Flask.\n* Pyramid\n    * [cornice](https://github.com/Cornices/cornice) - A RESTful framework for Pyramid.\n* Framework agnostic\n    * [falcon](https://github.com/falconry/falcon) - A high-performance framework for building cloud APIs and web app backends.\n    * [fastapi](https://github.com/tiangolo/fastapi) - A modern, fast, web framework for building APIs with Python 3.6+ based on standard Python type hints.\n    * [hug](https://github.com/hugapi/hug) - A Python 3 framework for cleanly exposing APIs.\n    * [sandman2](https://github.com/jeffknupp/sandman2) - Automated REST APIs for existing database-driven systems.\n    * [sanic](https://github.com/sanic-org/sanic) - A Python 3.6+ web server and web framework that's written to go fast.\n\n## Robotics\n\n*Libraries for robotics.*\n\n* [PythonRobotics](https://github.com/AtsushiSakai/PythonRobotics) - This is a compilation of various robotics algorithms with visualizations.\n* [rospy](http://wiki.ros.org/rospy) - This is a library for ROS (Robot Operating System).\n\n## RPC Servers\n\n*RPC-compatible servers.*\n\n* [RPyC](https://github.com/tomerfiliba/rpyc) (Remote Python Call) - A transparent and symmetric RPC library for Python\n* [zeroRPC](https://github.com/0rpc/zerorpc-python) - zerorpc is a flexible RPC implementation based on [ZeroMQ](http://zeromq.org/) and [MessagePack](http://msgpack.org/).\n\n## Science\n\n*Libraries for scientific computing. Also see [Python-for-Scientists](https://github.com/TomNicholas/Python-for-Scientists).*\n\n* [astropy](http://www.astropy.org/) - A community Python library for Astronomy.\n* [bcbio-nextgen](https://github.com/chapmanb/bcbio-nextgen) - Providing best-practice pipelines for fully automated high throughput sequencing analysis.\n* [bccb](https://github.com/chapmanb/bcbb) - Collection of useful code related to biological analysis.\n* [Biopython](http://biopython.org/wiki/Main_Page) - Biopython is a set of freely available tools for biological computation.\n* [cclib](http://cclib.github.io/) - A library for parsing and interpreting the results of computational chemistry packages.\n* [Colour](http://colour-science.org/) - Implementing a comprehensive number of colour theory transformations and algorithms.\n* [Karate Club](https://github.com/benedekrozemberczki/karateclub) - Unsupervised machine learning toolbox for graph structured data.\n* [NetworkX](https://networkx.github.io/) - A high-productivity software for complex networks.\n* [NIPY](http://nipy.org) - A collection of neuroimaging toolkits.\n* [NumPy](http://www.numpy.org/) - A fundamental package for scientific computing with Python.\n* [ObsPy](https://github.com/obspy/obspy/wiki/) - A Python toolbox for seismology.\n* [Open Babel](https://open-babel.readthedocs.io/) - A chemical toolbox designed to speak the many languages of chemical data.\n* [PyDy](http://www.pydy.org/) - Short for Python Dynamics, used to assist with workflow in the modeling of dynamic motion.\n* [PyMC](https://github.com/pymc-devs/pymc3) - Markov Chain Monte Carlo sampling toolkit.\n* [QuTiP](http://qutip.org/) - Quantum Toolbox in Python.\n* [RDKit](http://www.rdkit.org/) - Cheminformatics and Machine Learning Software.\n* [SciPy](https://www.scipy.org/) - A Python-based ecosystem of open-source software for mathematics, science, and engineering.\n* [SimPy](https://gitlab.com/team-simpy/simpy) -  A process-based discrete-event simulation framework.\n* [statsmodels](https://github.com/statsmodels/statsmodels) - Statistical modeling and econometrics in Python.\n* [SymPy](https://github.com/sympy/sympy) - A Python library for symbolic mathematics.\n* [Zipline](https://github.com/quantopian/zipline) - A Pythonic algorithmic trading library.\n\n## Search\n\n*Libraries and software for indexing and performing search queries on data.*\n\n* [django-haystack](https://github.com/django-haystack/django-haystack) - Modular search for Django.\n* [elasticsearch-dsl-py](https://github.com/elastic/elasticsearch-dsl-py) - The official high-level Python client for Elasticsearch.\n* [elasticsearch-py](https://www.elastic.co/guide/en/elasticsearch/client/python-api/current/index.html) - The official low-level Python client for [Elasticsearch](https://www.elastic.co/products/elasticsearch).\n* [pysolr](https://github.com/django-haystack/pysolr) - A lightweight Python wrapper for [Apache Solr](https://lucene.apache.org/solr/).\n* [whoosh](http://whoosh.readthedocs.io/en/latest/) - A fast, pure Python search engine library.\n\n## Serialization\n\n*Libraries for serializing complex data types*\n\n* [marshmallow](https://github.com/marshmallow-code/marshmallow) - A lightweight library for converting complex objects to and from simple Python datatypes.\n* [pysimdjson](https://github.com/TkTech/pysimdjson) - A Python bindings for [simdjson](https://github.com/lemire/simdjson).\n* [python-rapidjson](https://github.com/python-rapidjson/python-rapidjson) - A Python wrapper around [RapidJSON](https://github.com/Tencent/rapidjson).\n* [ultrajson](https://github.com/esnme/ultrajson) - A fast JSON decoder and encoder written in C with Python bindings.\n\n## Serverless Frameworks\n\n*Frameworks for developing serverless Python code.*\n\n* [python-lambda](https://github.com/nficano/python-lambda) - A toolkit for developing and deploying Python code in AWS Lambda.\n* [Zappa](https://github.com/zappa/Zappa) - A tool for deploying WSGI applications on AWS Lambda and API Gateway.\n\n## Shell\n\n*Shells based on Python.*\n\n* [xonsh](https://github.com/xonsh/xonsh/) - A Python-powered, cross-platform, Unix-gazing shell language and command prompt.\n\n## Specific Formats Processing\n\n*Libraries for parsing and manipulating specific text formats.*\n\n* General\n    * [tablib](https://github.com/jazzband/tablib) - A module for Tabular Datasets in XLS, CSV, JSON, YAML.\n* Office\n    * [docxtpl](https://github.com/elapouya/python-docx-template) - Editing a docx document by jinja2 template\n    * [openpyxl](https://openpyxl.readthedocs.io/en/stable/) - A library for reading and writing Excel 2010 xlsx/xlsm/xltx/xltm files.\n    * [pyexcel](https://github.com/pyexcel/pyexcel) - Providing one API for reading, manipulating and writing csv, ods, xls, xlsx and xlsm files.\n    * [python-docx](https://github.com/python-openxml/python-docx) - Reads, queries and modifies Microsoft Word 2007/2008 docx files.\n    * [python-pptx](https://github.com/scanny/python-pptx) - Python library for creating and updating PowerPoint (.pptx) files.\n    * [unoconv](https://github.com/unoconv/unoconv) - Convert between any document format supported by LibreOffice/OpenOffice.\n    * [XlsxWriter](https://github.com/jmcnamara/XlsxWriter) - A Python module for creating Excel .xlsx files.\n    * [xlwings](https://github.com/ZoomerAnalytics/xlwings) - A BSD-licensed library that makes it easy to call Python from Excel and vice versa.\n    * [xlwt](https://github.com/python-excel/xlwt) / [xlrd](https://github.com/python-excel/xlrd) - Writing and reading data and formatting information from Excel files.\n* PDF\n    * [pdfminer.six](https://github.com/pdfminer/pdfminer.six) - Pdfminer.six is a community maintained fork of the original PDFMiner.\n    * [PyPDF2](https://github.com/mstamy2/PyPDF2) - A library capable of splitting, merging and transforming PDF pages.\n    * [ReportLab](https://www.reportlab.com/opensource/) - Allowing Rapid creation of rich PDF documents.\n* Markdown\n    * [Mistune](https://github.com/lepture/mistune) - Fastest and full featured pure Python parsers of Markdown.\n    * [Python-Markdown](https://github.com/waylan/Python-Markdown) - A Python implementation of John Gruber’s Markdown.\n* YAML\n    * [PyYAML](http://pyyaml.org/) - YAML implementations for Python.\n* CSV\n    * [csvkit](https://github.com/wireservice/csvkit) - Utilities for converting to and working with CSV.\n* Archive\n    * [unp](https://github.com/mitsuhiko/unp) - A command line tool that can unpack archives easily.\n\n## Static Site Generator\n\n*Static site generator is a software that takes some text + templates as input and produces HTML files on the output.*\n\n* [lektor](https://github.com/lektor/lektor) - An easy to use static CMS and blog engine.\n* [mkdocs](https://github.com/mkdocs/mkdocs/) - Markdown friendly documentation generator.\n* [makesite](https://github.com/sunainapai/makesite) - Simple, lightweight, and magic-free static site/blog generator (< 130 lines).\n* [nikola](https://github.com/getnikola/nikola) - A static website and blog generator.\n* [pelican](https://github.com/getpelican/pelican) - Static site generator that supports Markdown and reST syntax.\n\n## Tagging\n\n*Libraries for tagging items.*\n\n* [django-taggit](https://github.com/jazzband/django-taggit) - Simple tagging for Django.\n\n## Task Queues\n\n*Libraries for working with task queues.*\n\n* [celery](https://docs.celeryproject.org/en/stable/) - An asynchronous task queue/job queue based on distributed message passing.\n* [dramatiq](https://github.com/Bogdanp/dramatiq) - A fast and reliable background task processing library for Python 3.\n* [huey](https://github.com/coleifer/huey) - Little multi-threaded task queue.\n* [mrq](https://github.com/pricingassistant/mrq) - A distributed worker task queue in Python using Redis & gevent.\n* [rq](https://github.com/rq/rq) - Simple job queues for Python.\n\n## Template Engine\n\n*Libraries and tools for templating and lexing.*\n\n* [Genshi](https://genshi.edgewall.org/) - Python templating toolkit for generation of web-aware output.\n* [Jinja2](https://github.com/pallets/jinja) - A modern and designer friendly templating language.\n* [Mako](http://www.makotemplates.org/) - Hyperfast and lightweight templating for the Python platform.\n\n## Testing\n\n*Libraries for testing codebases and generating test data.*\n\n* Testing Frameworks\n    * [hypothesis](https://github.com/HypothesisWorks/hypothesis) - Hypothesis is an advanced Quickcheck style property based testing library.\n    * [nose2](https://github.com/nose-devs/nose2) - The successor to `nose`, based on `unittest2.\n    * [pytest](https://docs.pytest.org/en/latest/) - A mature full-featured Python testing tool.\n    * [Robot Framework](https://github.com/robotframework/robotframework) - A generic test automation framework.\n    * [unittest](https://docs.python.org/3/library/unittest.html) - (Python standard library) Unit testing framework.\n* Test Runners\n    * [green](https://github.com/CleanCut/green) - A clean, colorful test runner.\n    * [mamba](http://nestorsalceda.github.io/mamba/) - The definitive testing tool for Python. Born under the banner of BDD.\n    * [tox](https://tox.readthedocs.io/en/latest/) - Auto builds and tests distributions in multiple Python versions\n* GUI / Web Testing\n    * [locust](https://github.com/locustio/locust) - Scalable user load testing tool written in Python.\n    * [PyAutoGUI](https://github.com/asweigart/pyautogui) - PyAutoGUI is a cross-platform GUI automation Python module for human beings.\n    * [Schemathesis](https://github.com/kiwicom/schemathesis) - A tool for automatic property-based testing of web applications built with Open API / Swagger specifications.\n    * [Selenium](https://pypi.org/project/selenium/) - Python bindings for [Selenium](http://www.seleniumhq.org/) WebDriver.\n    * [sixpack](https://github.com/seatgeek/sixpack) - A language-agnostic A/B Testing framework.\n    * [splinter](https://github.com/cobrateam/splinter) - Open source tool for testing web applications.\n* Mock\n    * [doublex](https://pypi.org/project/doublex/) - Powerful test doubles framework for Python.\n    * [freezegun](https://github.com/spulec/freezegun) - Travel through time by mocking the datetime module.\n    * [httmock](https://github.com/patrys/httmock) - A mocking library for requests for Python 2.6+ and 3.2+.\n    * [httpretty](https://github.com/gabrielfalcao/HTTPretty) - HTTP request mock tool for Python.\n    * [mock](https://docs.python.org/3/library/unittest.mock.html) - (Python standard library) A mocking and patching library.\n    * [mocket](https://github.com/mindflayer/python-mocket) - A socket mock framework with gevent/asyncio/SSL support.\n    * [responses](https://github.com/getsentry/responses) - A utility library for mocking out the requests Python library.\n    * [VCR.py](https://github.com/kevin1024/vcrpy) - Record and replay HTTP interactions on your tests.\n* Object Factories\n    * [factory_boy](https://github.com/FactoryBoy/factory_boy) - A test fixtures replacement for Python.\n    * [mixer](https://github.com/klen/mixer) - Another fixtures replacement. Supports Django, Flask, SQLAlchemy, Peewee and etc.\n    * [model_mommy](https://github.com/vandersonmota/model_mommy) - Creating random fixtures for testing in Django.\n* Code Coverage\n    * [coverage](https://pypi.org/project/coverage/) - Code coverage measurement.\n* Fake Data\n    * [fake2db](https://github.com/emirozer/fake2db) - Fake database generator.\n    * [faker](https://github.com/joke2k/faker) - A Python package that generates fake data.\n    * [mimesis](https://github.com/lk-geimfari/mimesis) - is a Python library that help you generate fake data.\n    * [radar](https://pypi.org/project/radar/) - Generate random datetime / time.\n\n## Text Processing\n\n*Libraries for parsing and manipulating plain texts.*\n\n* General\n    * [chardet](https://github.com/chardet/chardet) - Python 2/3 compatible character encoding detector.\n    * [difflib](https://docs.python.org/3/library/difflib.html) - (Python standard library) Helpers for computing deltas.\n    * [ftfy](https://github.com/LuminosoInsight/python-ftfy) - Makes Unicode text less broken and more consistent automagically.\n    * [fuzzywuzzy](https://github.com/seatgeek/fuzzywuzzy) - Fuzzy String Matching.\n    * [Levenshtein](https://github.com/ztane/python-Levenshtein/) - Fast computation of Levenshtein distance and string similarity.\n    * [pangu.py](https://github.com/vinta/pangu.py) - Paranoid text spacing.\n    * [pyfiglet](https://github.com/pwaller/pyfiglet) - An implementation of figlet written in Python.\n    * [pypinyin](https://github.com/mozillazg/python-pinyin) - Convert Chinese hanzi (漢字) to pinyin (拼音).\n    * [textdistance](https://github.com/orsinium/textdistance) - Compute distance between sequences with 30+ algorithms.\n    * [unidecode](https://pypi.org/project/Unidecode/) - ASCII transliterations of Unicode text.\n* Slugify\n    * [awesome-slugify](https://github.com/dimka665/awesome-slugify) - A Python slugify library that can preserve unicode.\n    * [python-slugify](https://github.com/un33k/python-slugify) - A Python slugify library that translates unicode to ASCII.\n    * [unicode-slugify](https://github.com/mozilla/unicode-slugify) - A slugifier that generates unicode slugs with Django as a dependency.\n* Unique identifiers\n    * [hashids](https://github.com/davidaurelio/hashids-python) - Implementation of [hashids](http://hashids.org) in Python.\n    * [shortuuid](https://github.com/skorokithakis/shortuuid) - A generator library for concise, unambiguous and URL-safe UUIDs.\n* Parser\n    * [ply](https://github.com/dabeaz/ply) - Implementation of lex and yacc parsing tools for Python.\n    * [pygments](http://pygments.org/) - A generic syntax highlighter.\n    * [pyparsing](https://github.com/pyparsing/pyparsing) - A general purpose framework for generating parsers.\n    * [python-nameparser](https://github.com/derek73/python-nameparser) - Parsing human names into their individual components.\n    * [python-phonenumbers](https://github.com/daviddrysdale/python-phonenumbers) - Parsing, formatting, storing and validating international phone numbers.\n    * [python-user-agents](https://github.com/selwin/python-user-agents) - Browser user agent parser.\n    * [sqlparse](https://github.com/andialbrecht/sqlparse) - A non-validating SQL parser.\n\n## Third-party APIs\n\n*Libraries for accessing third party services APIs. Also see [List of Python API Wrappers and Libraries](https://github.com/realpython/list-of-python-api-wrappers).*\n\n* [apache-libcloud](https://libcloud.apache.org/) - One Python library for all clouds.\n* [boto3](https://github.com/boto/boto3) - Python interface to Amazon Web Services.\n* [django-wordpress](https://github.com/istrategylabs/django-wordpress) - WordPress models and views for Django.\n* [facebook-sdk](https://github.com/mobolic/facebook-sdk) - Facebook Platform Python SDK.\n* [google-api-python-client](https://github.com/google/google-api-python-client) - Google APIs Client Library for Python.\n* [gspread](https://github.com/burnash/gspread) - Google Spreadsheets Python API.\n* [twython](https://github.com/ryanmcgrath/twython) - A Python wrapper for the Twitter API.\n\n## URL Manipulation\n\n*Libraries for parsing URLs.*\n\n* [furl](https://github.com/gruns/furl) - A small Python library that makes parsing and manipulating URLs easy.\n* [purl](https://github.com/codeinthehole/purl) - A simple, immutable URL class with a clean API for interrogation and manipulation.\n* [pyshorteners](https://github.com/ellisonleao/pyshorteners) - A pure Python URL shortening lib.\n* [webargs](https://github.com/marshmallow-code/webargs) - A friendly library for parsing HTTP request arguments with built-in support for popular web frameworks.\n\n## Video\n\n*Libraries for manipulating video and GIFs.*\n\n* [moviepy](https://zulko.github.io/moviepy/) - A module for script-based movie editing with many formats, including animated GIFs.\n* [scikit-video](https://github.com/aizvorski/scikit-video) - Video processing routines for SciPy.\n* [vidgear](https://github.com/abhiTronix/vidgear) - Most Powerful multi-threaded Video Processing framework.\n\n## Web Asset Management\n\n*Tools for managing, compressing and minifying website assets.*\n\n* [django-compressor](https://github.com/django-compressor/django-compressor) - Compresses linked and inline JavaScript or CSS into a single cached file.\n* [django-pipeline](https://github.com/jazzband/django-pipeline) - An asset packaging library for Django.\n* [django-storages](https://github.com/jschneier/django-storages) - A collection of custom storage back ends for Django.\n* [fanstatic](http://www.fanstatic.org/en/latest/) - Packages, optimizes, and serves static file dependencies as Python packages.\n* [fileconveyor](http://wimleers.com/fileconveyor) - A daemon to detect and sync files to CDNs, S3 and FTP.\n* [flask-assets](https://github.com/miracle2k/flask-assets) - Helps you integrate webassets into your Flask app.\n* [webassets](https://github.com/miracle2k/webassets) - Bundles, optimizes, and manages unique cache-busting URLs for static resources.\n\n## Web Content Extracting\n\n*Libraries for extracting web contents.*\n\n* [html2text](https://github.com/Alir3z4/html2text) - Convert HTML to Markdown-formatted text.\n* [lassie](https://github.com/michaelhelmick/lassie) - Web Content Retrieval for Humans.\n* [micawber](https://github.com/coleifer/micawber) - A small library for extracting rich content from URLs.\n* [newspaper](https://github.com/codelucas/newspaper) - News extraction, article extraction and content curation in Python.\n* [python-readability](https://github.com/buriy/python-readability) - Fast Python port of arc90's readability tool.\n* [requests-html](https://github.com/psf/requests-html) - Pythonic HTML Parsing for Humans.\n* [sumy](https://github.com/miso-belica/sumy) - A module for automatic summarization of text documents and HTML pages.\n* [textract](https://github.com/deanmalmgren/textract) - Extract text from any document, Word, PowerPoint, PDFs, etc.\n* [toapi](https://github.com/gaojiuli/toapi) - Every web site provides APIs.\n\n## Web Crawling\n\n*Libraries to automate web scraping.*\n\n* [feedparser](https://github.com/kurtmckee/feedparser) - Universal feed parser.\n* [grab](https://github.com/lorien/grab) - Site scraping framework.\n* [mechanicalsoup](https://github.com/MechanicalSoup/MechanicalSoup) - A Python library for automating interaction with websites.\n* [scrapy](https://github.com/scrapy/scrapy) - A fast high-level screen scraping and web crawling framework.\n\n## Web Frameworks\n\n*Traditional full stack web frameworks. Also see [RESTful API](https://github.com/vinta/awesome-python#restful-api).*\n\n* Synchronous\n    * [django](https://github.com/django/django) - The most popular web framework in Python.\n        * [awesome-django](https://github.com/shahraizali/awesome-django)\n        * [awesome-django](https://github.com/wsvincent/awesome-django)\n    * [flask](https://github.com/pallets/flask) - A microframework for Python.\n        * [awesome-flask](https://github.com/humiaozuzu/awesome-flask)\n    * [pyramid](https://pylonsproject.org/) - A small, fast, down-to-earth, open source Python web framework.\n        * [awesome-pyramid](https://github.com/uralbash/awesome-pyramid)\n    * [masonite](https://github.com/MasoniteFramework/masonite) - The modern and developer centric Python web framework.\n* Asynchronous\n    * [tornado](https://github.com/tornadoweb/tornado) - A web framework and asynchronous networking library.\n\n## WebSocket\n\n*Libraries for working with WebSocket.*\n\n* [autobahn-python](https://github.com/crossbario/autobahn-python) - WebSocket & WAMP for Python on Twisted and [asyncio](https://docs.python.org/3/library/asyncio.html).\n* [channels](https://github.com/django/channels) - Developer-friendly asynchrony for Django.\n* [websockets](https://github.com/aaugustin/websockets) - A library for building WebSocket servers and clients with a focus on correctness and simplicity.\n\n## WSGI Servers\n\n*WSGI-compatible web servers.*\n\n* [gunicorn](https://github.com/benoitc/gunicorn) - Pre-forked, ported from Ruby's Unicorn project.\n* [uwsgi](https://uwsgi-docs.readthedocs.io/en/latest/) - A project aims at developing a full stack for building hosting services, written in C.\n* [waitress](https://github.com/Pylons/waitress) - Multi-threaded, powers Pyramid.\n* [werkzeug](https://github.com/pallets/werkzeug) - A WSGI utility library for Python that powers Flask and can easily be embedded into your own projects.\n\n# Resources\n\nWhere to discover learning resources or new Python libraries.\n\n## Newsletters\n\n* [Awesome Python Newsletter](http://python.libhunt.com/newsletter)\n* [Pycoder's Weekly](https://pycoders.com/)\n* [Python Tricks](https://realpython.com/python-tricks/)\n* [Python Weekly](https://www.pythonweekly.com/)\n\n## Podcasts\n\n* [Django Chat](https://djangochat.com/)\n* [Python Bytes](https://pythonbytes.fm)\n* [Talk Python To Me](https://talkpython.fm/)\n* [Python Test](https://podcast.pythontest.com/)\n* [The Real Python Podcast](https://realpython.com/podcasts/rpp/)\n\n# Contributing\n\nYour contributions are always welcome! Please take a look at the [contribution guidelines](https://github.com/vinta/awesome-python/blob/master/CONTRIBUTING.md) first.\n\n- - -\n\nIf you have any question about this opinionated list, do not hesitate to contact me [@VintaChen](https://twitter.com/VintaChen) on Twitter or open an issue on GitHub.\n\n",
    "author": "vinta",
    "project": "awesome-python",
    "date": "2025-06-08"
}